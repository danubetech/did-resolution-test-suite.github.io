{
  "stats": {
    "suites": 1,
    "tests": 22,
    "passes": 0,
    "pending": 0,
    "failures": 22,
    "start": "2023-12-31T00:31:42.373Z",
    "end": "2023-12-31T00:33:34.093Z",
    "duration": 111453,
    "testsRegistered": 22,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "207178b9-a42a-4b09-ab67-5c9b42497e0d",
      "title": "",
      "fullFile": "cypress/integration/uniresolver_spec.js",
      "file": "cypress/integration/uniresolver_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "406f2cbc-60cd-49c2-b831-ecee9276a6ba",
          "title": "Test Scenario 1: DID Resolution Result fixtures: https://dev.uniresolver.io/1.0/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved",
              "fullTitle": "Test Scenario 1: DID Resolution Result fixtures: https://dev.uniresolver.io/1.0/identifiers/ A correct DID can be resolved",
              "timedOut": null,
              "duration": 5038,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.clearCookies();\ncy.fixture(path_example_dids).its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.headers[\"content-type\"].replace(/\\s+/g, \"\")).contains('application/ld+json;profile=\"https://w3id.org/did-resolution');\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response).to.be.a(\"object\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocument\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didResolutionMetadata\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocumentMetadata\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body.didDocument.id).to.be.a(\"string\").and.satisfy(msg => msg.startsWith(\"did:\"));\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33387/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33387/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33387/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33387/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33387/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33387/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:110:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:108:27)",
                "diff": null
              },
              "uuid": "f425d2cb-0390-4b83-bfbe-7cd515ba5e14",
              "parentUUID": "406f2cbc-60cd-49c2-b831-ecee9276a6ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f425d2cb-0390-4b83-bfbe-7cd515ba5e14"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5038,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "36db8dae-6c39-4134-a1ca-684015702f35",
          "title": "Test Scenario 2: JSON-LD DID document",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved with header input",
              "fullTitle": "Test Scenario 2: JSON-LD DID document A correct DID can be resolved with header input",
              "timedOut": null,
              "duration": 5063,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"application/did+ld+json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n      cy.get(\"@request\").then(response => {\n        expect(response).to.be.a(\"object\");\n      });\n      expect(response.body).not.to.have.property(\"didDocument\");\n      expect(response.body[\"id\"]).to.contain(normalDid);\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33387/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33387/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33387/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33387/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33387/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33387/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:148:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:146:27)",
                "diff": null
              },
              "uuid": "ecaabfb2-b80f-4923-8dd4-b817b9083150",
              "parentUUID": "36db8dae-6c39-4134-a1ca-684015702f35",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ecaabfb2-b80f-4923-8dd4-b817b9083150"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5063,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c33bd7f9-39c7-463c-b51f-622c2b9497ba",
          "title": "Test Scenario 3: Representation not supported",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Shows an error when a representation is prompted",
              "fullTitle": "Test Scenario 3: Representation not supported Shows an error when a representation is prompted",
              "timedOut": null,
              "duration": 5035,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"image/png\"\n      },\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(406);\n      console.log(response);\n      expect(response.body.dereferencingMetadata.error).to.eq('\"representationNotSupported\"');\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33387/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33387/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33387/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33387/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33387/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33387/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:203:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:201:27)",
                "diff": null
              },
              "uuid": "1ce5a0e3-731e-4b20-b61a-e5f9353a1d2c",
              "parentUUID": "c33bd7f9-39c7-463c-b51f-622c2b9497ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "1ce5a0e3-731e-4b20-b61a-e5f9353a1d2c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5035,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e7f9f26d-ce82-47a0-bf4c-4c4484656902",
          "title": "Test Scenario 4: Deactivated",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns an HTTP code of 410 for deactivated DIDs",
              "fullTitle": "Test Scenario 4: Deactivated Returns an HTTP code of 410 for deactivated DIDs",
              "timedOut": null,
              "duration": 5054,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"deacDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const deacDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + deacDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(410);\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.body.didDocumentMetadata.deactivated).to.eq(true);\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:indicio:test:16vv8izCToK4svjYjvsp4r\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:indicio:test:16vv8izCToK4svjYjvsp4r\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33387/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33387/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33387/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33387/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33387/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33387/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:227:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:225:27)",
                "diff": null
              },
              "uuid": "5ac8a06b-0ccb-445d-a08d-57ae800f6261",
              "parentUUID": "e7f9f26d-ce82-47a0-bf4c-4c4484656902",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5ac8a06b-0ccb-445d-a08d-57ae800f6261"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5054,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "88e0f9a1-96b8-4e3f-a05a-c7dec67447ac",
          "title": "Test Scenario 5: Not found",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns an HTTP code of 404 for non-existent DIDs",
              "fullTitle": "Test Scenario 5: Not found Returns an HTTP code of 404 for non-existent DIDs",
              "timedOut": null,
              "duration": 5056,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"nonExisDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const nonExDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + nonExDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(404);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response).to.be.a(\"object\");\n      expect(response.body.didResolutionMetadata.error).to.eq(\"notFound\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:0000000000000000000000\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:0000000000000000000000\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33387/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33387/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33387/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33387/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33387/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33387/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:249:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:247:27)",
                "diff": null
              },
              "uuid": "6f41bd8a-78ca-45f7-88f9-cb0630b3af08",
              "parentUUID": "88e0f9a1-96b8-4e3f-a05a-c7dec67447ac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "6f41bd8a-78ca-45f7-88f9-cb0630b3af08"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5056,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "63018e03-edd6-4dfa-9b9d-70b44ff8019a",
          "title": "Test Scenario 6A: Invalid DID",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns a HTTP code of 400 for an invalid DID",
              "fullTitle": "Test Scenario 6A: Invalid DID Returns a HTTP code of 400 for an invalid DID",
              "timedOut": null,
              "duration": 5057,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(400);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response).to.be.a(\"object\");\n      expect(response.body.didResolutionMetadata.error).contains(\"invalidDid\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:example_222\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:example_222\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33387/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33387/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33387/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33387/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33387/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33387/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:271:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:269:27)",
                "diff": null
              },
              "uuid": "fb4d5c5c-f74d-4e04-b8ac-63c6457cc079",
              "parentUUID": "63018e03-edd6-4dfa-9b9d-70b44ff8019a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "fb4d5c5c-f74d-4e04-b8ac-63c6457cc079"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5057,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cbc04c10-484a-4905-b7bd-d2c2a1d91a51",
          "title": "Test Scenario 6B: method not supported DIDs",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises an error for unsupported DID methods",
              "fullTitle": "Test Scenario 6B: method not supported DIDs Raises an error for unsupported DID methods",
              "timedOut": null,
              "duration": 5060,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"methodNotSupportedDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.body.didResolutionMetadata.error).contains(\"methodNotSupported\");\n      expect(response).to.be.a(\"object\"); // todo: should this be 404 or 400?\n      expect(response.status).to.eq(400); // returns 501\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:xyz:12345\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:xyz:12345\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33387/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33387/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33387/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33387/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33387/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33387/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:293:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:291:27)",
                "diff": null
              },
              "uuid": "a6e13c3d-a913-4c7c-9356-12db8b7e6960",
              "parentUUID": "cbc04c10-484a-4905-b7bd-d2c2a1d91a51",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a6e13c3d-a913-4c7c-9356-12db8b7e6960"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5060,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bab9e0ad-1690-472f-88ff-6d1ef10a7460",
          "title": "Test Scenario 6C: invalid verificationMethod.id",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises error when verificationMethod.id is invalid",
              "fullTitle": "Test Scenario 6C: invalid verificationMethod.id Raises error when verificationMethod.id is invalid",
              "timedOut": null,
              "duration": 5066,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidVerificationMethodId\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"'); // todo: should this be 404 or 400?\n      expect(response.status).to.eq(400); // return 200\n      expect(response.body.didResolutionMetadata.error).contains(\"invalidDidUrl\"); // doesn't exist\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:did-web.godiddy.com:ad58e1ad-09e9-4873-83c7-42e11809b54b\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:did-web.godiddy.com:ad58e1ad-09e9-4873-83c7-42e11809b54b\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33387/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33387/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33387/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33387/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33387/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33387/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:318:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:316:27)",
                "diff": null
              },
              "uuid": "653a7b9d-c05e-4cd8-8b45-cffeb63a3cc9",
              "parentUUID": "bab9e0ad-1690-472f-88ff-6d1ef10a7460",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "653a7b9d-c05e-4cd8-8b45-cffeb63a3cc9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5066,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f09642e1-6c55-4321-b8c0-748d90c4604e",
          "title": "Test Scenario 6D: invalid verificationMethod.controller",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises error when verificationMethod.controller is invalid",
              "fullTitle": "Test Scenario 6D: invalid verificationMethod.controller Raises error when verificationMethod.controller is invalid",
              "timedOut": null,
              "duration": 5072,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidVerificationMethodController\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"'); // todo: should this be 404 or 400?\n      expect(response.status).to.eq(400); // returns 200\n      expect(response.body.didResolutionMetadata.error).contains(\"invalidDid\"); // doesn't exist\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:did-web.godiddy.com:ad58e1ad-09e9-4873-83c7-42e11809b54b\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:did-web.godiddy.com:ad58e1ad-09e9-4873-83c7-42e11809b54b\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33387/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33387/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33387/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33387/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33387/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33387/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:342:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:340:27)",
                "diff": null
              },
              "uuid": "a87ad802-9741-4f71-af68-7e6091d2869a",
              "parentUUID": "f09642e1-6c55-4321-b8c0-748d90c4604e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a87ad802-9741-4f71-af68-7e6091d2869a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5072,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "839d8761-a612-4847-aefa-c1e4772a8304",
          "title": "Test Scenario 6E: invalid didDocument.id",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises error when didDocument.id is invalid",
              "fullTitle": "Test Scenario 6E: invalid didDocument.id Raises error when didDocument.id is invalid",
              "timedOut": null,
              "duration": 5052,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidDidDocumentId\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"invalidDid\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/to_be_defined\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/to_be_defined\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33387/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33387/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33387/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33387/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33387/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33387/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:366:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:364:27)",
                "diff": null
              },
              "uuid": "06171b4d-7089-43a5-b798-c04b06a6f09a",
              "parentUUID": "839d8761-a612-4847-aefa-c1e4772a8304",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "06171b4d-7089-43a5-b798-c04b06a6f09a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5052,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9b105d09-02b2-4ed6-90c0-740b77d32c8e",
          "title": "Test Scenario 6F: Invalid didDocument scheme",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises invalidDid error when if scheme is not did",
              "fullTitle": "Test Scenario 6F: Invalid didDocument scheme Raises invalidDid error when if scheme is not did",
              "timedOut": null,
              "duration": 5034,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidDidScheme\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"invalidDid\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/urn:uuid:c0bbe99d-2071-4fd3-a87e-6b710b369108\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/urn:uuid:c0bbe99d-2071-4fd3-a87e-6b710b369108\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33387/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33387/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33387/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33387/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33387/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33387/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:388:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:386:27)",
                "diff": null
              },
              "uuid": "dc318064-2680-493f-8b8e-26c989a48d0f",
              "parentUUID": "9b105d09-02b2-4ed6-90c0-740b77d32c8e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "dc318064-2680-493f-8b8e-26c989a48d0f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5034,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fb3b50a1-d116-4aab-a51b-336328e561bf",
          "title": "Test Scenario 6G: notAllowedLocalDerivedKey error/warning",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises notAllowedLocalDerivedKey error when did is incorrect",
              "fullTitle": "Test Scenario 6G: notAllowedLocalDerivedKey error/warning Raises notAllowedLocalDerivedKey error when did is incorrect",
              "timedOut": null,
              "duration": 5072,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"notAllowedLocalDerivedKey\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"notAllowedLocalDerivedKey\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:danubetech.com:did:test1\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:danubetech.com:did:test1\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33387/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33387/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33387/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33387/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33387/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33387/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:410:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:408:27)",
                "diff": null
              },
              "uuid": "17c505cd-0e35-4de2-91ca-e350cfb5346e",
              "parentUUID": "fb3b50a1-d116-4aab-a51b-336328e561bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "17c505cd-0e35-4de2-91ca-e350cfb5346e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5072,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eaad16c6-ce86-4622-82cd-475929ace3cd",
          "title": "Test Scenario 6H: notAllowedLocalDuplicateKey error/warning",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises notAllowedLocalDuplicateKey error when did is incorrect",
              "fullTitle": "Test Scenario 6H: notAllowedLocalDuplicateKey error/warning Raises notAllowedLocalDuplicateKey error when did is incorrect",
              "timedOut": null,
              "duration": 5076,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidDidDocumentId\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"notAllowedLocalDuplicateKey\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/to_be_defined\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/to_be_defined\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33387/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33387/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33387/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33387/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33387/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33387/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:432:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:430:27)",
                "diff": null
              },
              "uuid": "522a034a-e87d-485f-8de7-b745f7fad1ac",
              "parentUUID": "eaad16c6-ce86-4622-82cd-475929ace3cd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "522a034a-e87d-485f-8de7-b745f7fad1ac"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5076,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f133d821-844b-42b9-819a-be1e4e31f817",
          "title": "Test Scenario 6I: notAllowedKeyType error/warning",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises notAllowedKeyType error when did is incorrect",
              "fullTitle": "Test Scenario 6I: notAllowedKeyType error/warning Raises notAllowedKeyType error when did is incorrect",
              "timedOut": null,
              "duration": 5076,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidDidDocumentId\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"notAllowedKeyType\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/to_be_defined\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/to_be_defined\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33387/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33387/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33387/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33387/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33387/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33387/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:454:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:452:27)",
                "diff": null
              },
              "uuid": "82a510d3-49b8-4a86-aaf3-d4512cb7ce3d",
              "parentUUID": "f133d821-844b-42b9-819a-be1e4e31f817",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "82a510d3-49b8-4a86-aaf3-d4512cb7ce3d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5076,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "01d55bb1-a71d-4834-ad0c-a59cdb290564",
          "title": "Test Scenario 6J: notAllowedMethod error/warning",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises notAllowedMethod error when did is incorrect",
              "fullTitle": "Test Scenario 6J: notAllowedMethod error/warning Raises notAllowedMethod error when did is incorrect",
              "timedOut": null,
              "duration": 5079,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"notAllowedMethod\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"notAllowedMethod\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:github:gjgd\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:github:gjgd\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33387/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33387/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33387/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33387/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33387/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33387/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:477:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:475:27)",
                "diff": null
              },
              "uuid": "0e8631d3-5f80-4a3b-a6ee-1c2bb0840041",
              "parentUUID": "01d55bb1-a71d-4834-ad0c-a59cdb290564",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0e8631d3-5f80-4a3b-a6ee-1c2bb0840041"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5079,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6d169212-db5f-4dd4-b675-b63b189bf371",
          "title": "Test Scenario 7: DID URLs with fragments",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Can resolve a DID with a fragment",
              "fullTitle": "Test Scenario 7: DID URLs with fragments Can resolve a DID with a fragment",
              "timedOut": null,
              "duration": 5081,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"fragmentDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const fragmentDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + fragmentDid,\n      failOnStatusCode: false,\n      headers: {\n        Accept: \"application/did+ld+json\",\n        Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n      }\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n      expect(response.body).not.to.have.property(\"didDocument\");\n      expect(response.body).to.have.property(\"id\");\n      expect(response.body[\"id\"]).to.contain(decodeURIComponent(fragmentDid.split(\"#\")[0]));\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did%3Asov%3AWRfXPg8dantKVubE3HX8pw%23key-1\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did%3Asov%3AWRfXPg8dantKVubE3HX8pw%23key-1\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33387/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33387/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33387/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33387/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33387/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33387/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:499:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:497:27)",
                "diff": null
              },
              "uuid": "3661c875-b115-4355-914a-7cb99328dad9",
              "parentUUID": "6d169212-db5f-4dd4-b675-b63b189bf371",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "3661c875-b115-4355-914a-7cb99328dad9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5081,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a58c4356-48f3-4f4b-980a-7ec9d93f6c52",
          "title": "Test Scenario 8: Service and relativeRef parameters",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fetches DID",
              "fullTitle": "Test Scenario 8: Service and relativeRef parameters Fetches DID",
              "timedOut": null,
              "duration": 5085,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"relativeParamDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const fragmentDid = list[key];\n    console.log(\"FRAGMENT DID IS\", fragmentDid);\n    cy.request({\n      method: \"GET\",\n      url: endpoint + fragmentDid,\n      headers: {\n        Accept: \"text/uri-list\"\n      },\n      failOnStatusCode: false\n    }).as(\"response\");\n    it(\"MUST return HTTP response status equals 303\", () => {\n      cy.get(\"@response\").then(response => {\n        expect(response.status).to.eq(303);\n      });\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:danubetech.com?service=github&relativeRef=did-method-dns\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:danubetech.com?service=github&relativeRef=did-method-dns\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33387/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33387/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33387/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33387/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33387/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33387/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:529:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:526:27)",
                "diff": null
              },
              "uuid": "9e47ac22-f8b4-454c-931d-5896883cf977",
              "parentUUID": "a58c4356-48f3-4f4b-980a-7ec9d93f6c52",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9e47ac22-f8b4-454c-931d-5896883cf977"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5085,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8d5ede22-796f-4eec-9ca8-86b906a0a3a3",
          "title": "Test Scenario 9: DID URLs with transformKeys",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5084,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"transformKeyDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const transformKeyDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + transformKeyDid,\n      headers: {\n        Accept: \"application/did+ld+json\",\n        Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response).to.be.a(\"object\");\n      response.body.verificationMethod.forEach(out => {\n        expect(out).has.property(\"type\").to.be.oneOf([\"JsonWebKey2020\", \"Ed25519VerificationKey2018\", \"X25519KeyAgreementKey2019\"]);\n      });\n      expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n      expect(response.body).has.property(\"id\", decodeURIComponent(transformKeyDid.split(\"?\")[0].split(\"#\")[0]));\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33387/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33387/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33387/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33387/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33387/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33387/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:554:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:552:27)",
                "diff": null
              },
              "uuid": "db390f69-5151-45c5-a0c9-c7b60e9c63dc",
              "parentUUID": "8d5ede22-796f-4eec-9ca8-86b906a0a3a3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "db390f69-5151-45c5-a0c9-c7b60e9c63dc"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5084,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2442accc-95c1-4cc3-8a28-a43d7c5352fc",
          "title": "Test Scenario 10: DID URLs with versionTime parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5086,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"versionTimeDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const versionTimeDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + versionTimeDid,\n      headers: {\n        Accept: \"application/did+ld+json\",\n        Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n      expect(response).to.be.a(\"object\");\n      expect(response.body).has.property(\"id\").contains(\"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33387/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33387/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33387/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33387/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33387/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33387/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:584:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:582:27)",
                "diff": null
              },
              "uuid": "b7545313-222f-47e4-8c93-7297d71cb625",
              "parentUUID": "2442accc-95c1-4cc3-8a28-a43d7c5352fc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b7545313-222f-47e4-8c93-7297d71cb625"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5086,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1af6d5f0-484d-4f18-a34e-57662c677882",
          "title": "Test Scenario 11: DID URLs with versionId parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5066,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"versionIdDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const versionIdDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + versionIdDid,\n      headers: {\n        Accept: \"application/did+ld+json\",\n        Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n      expect(response.body).has.property(\"id\").contains(decodeURIComponent(versionIdDid.split(\"?\")[0]));\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33387/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33387/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33387/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33387/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33387/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33387/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:611:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:609:27)",
                "diff": null
              },
              "uuid": "f69063c3-d244-4270-bb48-b082c0fecea0",
              "parentUUID": "1af6d5f0-484d-4f18-a34e-57662c677882",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f69063c3-d244-4270-bb48-b082c0fecea0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5066,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f9ccc5ac-bdc8-41b0-bc06-65f67b1f56e2",
          "title": "Test Scenario 12: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5067,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"application/json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      console.log(\"normal did is:\", normalDid);\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains(\"application/did+json;charset=utf-8\");\n      expect(response.body).has.property(\"id\", normalDid); // expect(response.body[\"keyAgreement\"][0]).to.contain(normalDid);\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33387/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33387/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33387/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33387/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33387/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33387/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:638:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:636:27)",
                "diff": null
              },
              "uuid": "b34f8acd-2b7e-4820-bdb8-6b819e0adffb",
              "parentUUID": "f9ccc5ac-bdc8-41b0-bc06-65f67b1f56e2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b34f8acd-2b7e-4820-bdb8-6b819e0adffb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5067,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2a37e56f-2c6b-48b6-921a-dd7c3b2ef409",
          "title": "Test Scenario 12B: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5094,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: 'application/ld+json;profile=\"https://w3c-ccg.github.io/did-resolution/\"'\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      console.log(\"normal did is:\", normalDid);\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains('application/ld+json; profile=\"https://w3c-ccg.github.io/did-resolution/\"');\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33387/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33387/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33387/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33387/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33387/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33387/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33387/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33387/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33387/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:665:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33387/__cypress/tests?p=cypress/integration/uniresolver_spec.js:663:27)",
                "diff": null
              },
              "uuid": "9b376847-0f47-4736-bbf6-598ae3a3285c",
              "parentUUID": "2a37e56f-2c6b-48b6-921a-dd7c3b2ef409",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9b376847-0f47-4736-bbf6-598ae3a3285c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5094,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.2"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mocha",
        "configFile": "reporterOpts.json",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.1.1"
    }
  }
}