{
  "stats": {
    "suites": 1,
    "tests": 22,
    "passes": 0,
    "pending": 0,
    "failures": 22,
    "start": "2023-12-25T00:29:44.714Z",
    "end": "2023-12-25T00:31:36.525Z",
    "duration": 111569,
    "testsRegistered": 22,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "38e8739b-6233-4237-b898-c7951fb19b39",
      "title": "",
      "fullFile": "cypress/integration/uniresolver_spec.js",
      "file": "cypress/integration/uniresolver_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0490079a-5712-4a7b-b204-7285c659ab5f",
          "title": "Test Scenario 1: DID Resolution Result fixtures: https://dev.uniresolver.io/1.0/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved",
              "fullTitle": "Test Scenario 1: DID Resolution Result fixtures: https://dev.uniresolver.io/1.0/identifiers/ A correct DID can be resolved",
              "timedOut": null,
              "duration": 5039,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.clearCookies();\ncy.fixture(path_example_dids).its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.headers[\"content-type\"].replace(/\\s+/g, \"\")).contains('application/ld+json;profile=\"https://w3id.org/did-resolution');\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response).to.be.a(\"object\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocument\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didResolutionMetadata\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocumentMetadata\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body.didDocument.id).to.be.a(\"string\").and.satisfy(msg => msg.startsWith(\"did:\"));\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35963/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:35963/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:35963/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:35963/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:35963/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:35963/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:110:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:108:27)",
                "diff": null
              },
              "uuid": "4f76c932-6c02-4ef6-ba1f-3285265ec029",
              "parentUUID": "0490079a-5712-4a7b-b204-7285c659ab5f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "4f76c932-6c02-4ef6-ba1f-3285265ec029"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5039,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b96f9d02-7e07-437a-8106-a5615abdca4a",
          "title": "Test Scenario 2: JSON-LD DID document",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved with header input",
              "fullTitle": "Test Scenario 2: JSON-LD DID document A correct DID can be resolved with header input",
              "timedOut": null,
              "duration": 5059,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"application/did+ld+json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n      cy.get(\"@request\").then(response => {\n        expect(response).to.be.a(\"object\");\n      });\n      expect(response.body).not.to.have.property(\"didDocument\");\n      expect(response.body[\"id\"]).to.contain(normalDid);\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35963/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:35963/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:35963/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:35963/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:35963/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:35963/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:148:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:146:27)",
                "diff": null
              },
              "uuid": "000de1c9-3351-415d-bdc6-5c9bc43df55a",
              "parentUUID": "b96f9d02-7e07-437a-8106-a5615abdca4a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "000de1c9-3351-415d-bdc6-5c9bc43df55a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5059,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3c4bd75b-9276-4a0e-b7ef-36a878beaded",
          "title": "Test Scenario 3: Representation not supported",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Shows an error when a representation is prompted",
              "fullTitle": "Test Scenario 3: Representation not supported Shows an error when a representation is prompted",
              "timedOut": null,
              "duration": 5036,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"image/png\"\n      },\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(406);\n      console.log(response);\n      expect(response.body.dereferencingMetadata.error).to.eq('\"representationNotSupported\"');\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35963/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:35963/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:35963/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:35963/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:35963/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:35963/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:203:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:201:27)",
                "diff": null
              },
              "uuid": "f21b7897-f850-4599-a901-2b18b5d7db04",
              "parentUUID": "3c4bd75b-9276-4a0e-b7ef-36a878beaded",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f21b7897-f850-4599-a901-2b18b5d7db04"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5036,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8e6137f1-162e-45b9-969d-0325ff8f5b44",
          "title": "Test Scenario 4: Deactivated",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns an HTTP code of 410 for deactivated DIDs",
              "fullTitle": "Test Scenario 4: Deactivated Returns an HTTP code of 410 for deactivated DIDs",
              "timedOut": null,
              "duration": 5057,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"deacDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const deacDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + deacDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(410);\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.body.didDocumentMetadata.deactivated).to.eq(true);\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:indicio:test:16vv8izCToK4svjYjvsp4r\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:indicio:test:16vv8izCToK4svjYjvsp4r\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35963/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:35963/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:35963/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:35963/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:35963/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:35963/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:227:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:225:27)",
                "diff": null
              },
              "uuid": "d61c4799-a9c2-4f95-8319-af5e3a717462",
              "parentUUID": "8e6137f1-162e-45b9-969d-0325ff8f5b44",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d61c4799-a9c2-4f95-8319-af5e3a717462"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5057,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3ba19b47-15c6-4b70-a990-8bde9f5cfb2c",
          "title": "Test Scenario 5: Not found",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns an HTTP code of 404 for non-existent DIDs",
              "fullTitle": "Test Scenario 5: Not found Returns an HTTP code of 404 for non-existent DIDs",
              "timedOut": null,
              "duration": 5058,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"nonExisDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const nonExDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + nonExDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(404);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response).to.be.a(\"object\");\n      expect(response.body.didResolutionMetadata.error).to.eq(\"notFound\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:0000000000000000000000\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:0000000000000000000000\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35963/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:35963/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:35963/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:35963/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:35963/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:35963/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:249:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:247:27)",
                "diff": null
              },
              "uuid": "5062f461-3f1f-4588-89fd-4f23d316bf7d",
              "parentUUID": "3ba19b47-15c6-4b70-a990-8bde9f5cfb2c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5062f461-3f1f-4588-89fd-4f23d316bf7d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5058,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d14df410-cc4f-402f-b053-0c1b50f46d62",
          "title": "Test Scenario 6A: Invalid DID",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns a HTTP code of 400 for an invalid DID",
              "fullTitle": "Test Scenario 6A: Invalid DID Returns a HTTP code of 400 for an invalid DID",
              "timedOut": null,
              "duration": 5062,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(400);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response).to.be.a(\"object\");\n      expect(response.body.didResolutionMetadata.error).contains(\"invalidDid\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:example_222\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:example_222\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35963/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:35963/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:35963/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:35963/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:35963/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:35963/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:271:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:269:27)",
                "diff": null
              },
              "uuid": "d310fefe-e0e4-455d-a06c-08690cbb2905",
              "parentUUID": "d14df410-cc4f-402f-b053-0c1b50f46d62",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d310fefe-e0e4-455d-a06c-08690cbb2905"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5062,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "813e5e34-656b-47a7-8be2-d0dcd3ca8b67",
          "title": "Test Scenario 6B: method not supported DIDs",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises an error for unsupported DID methods",
              "fullTitle": "Test Scenario 6B: method not supported DIDs Raises an error for unsupported DID methods",
              "timedOut": null,
              "duration": 5062,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"methodNotSupportedDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.body.didResolutionMetadata.error).contains(\"methodNotSupported\");\n      expect(response).to.be.a(\"object\"); // todo: should this be 404 or 400?\n      expect(response.status).to.eq(400); // returns 501\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:xyz:12345\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:xyz:12345\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35963/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:35963/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:35963/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:35963/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:35963/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:35963/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:293:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:291:27)",
                "diff": null
              },
              "uuid": "b72bdb41-3e2c-477a-b838-5081964f3e45",
              "parentUUID": "813e5e34-656b-47a7-8be2-d0dcd3ca8b67",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b72bdb41-3e2c-477a-b838-5081964f3e45"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5062,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "28cbad85-08a2-4111-9d02-9e5433f77a22",
          "title": "Test Scenario 6C: invalid verificationMethod.id",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises error when verificationMethod.id is invalid",
              "fullTitle": "Test Scenario 6C: invalid verificationMethod.id Raises error when verificationMethod.id is invalid",
              "timedOut": null,
              "duration": 5068,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidVerificationMethodId\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"'); // todo: should this be 404 or 400?\n      expect(response.status).to.eq(400); // return 200\n      expect(response.body.didResolutionMetadata.error).contains(\"invalidDidUrl\"); // doesn't exist\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:did-web.godiddy.com:ad58e1ad-09e9-4873-83c7-42e11809b54b\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:did-web.godiddy.com:ad58e1ad-09e9-4873-83c7-42e11809b54b\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35963/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:35963/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:35963/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:35963/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:35963/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:35963/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:318:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:316:27)",
                "diff": null
              },
              "uuid": "ddde8adb-c639-49bc-bfd4-26b5679a0a1d",
              "parentUUID": "28cbad85-08a2-4111-9d02-9e5433f77a22",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ddde8adb-c639-49bc-bfd4-26b5679a0a1d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5068,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8e1ba190-617a-4e90-83bb-4a5cfba7a321",
          "title": "Test Scenario 6D: invalid verificationMethod.controller",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises error when verificationMethod.controller is invalid",
              "fullTitle": "Test Scenario 6D: invalid verificationMethod.controller Raises error when verificationMethod.controller is invalid",
              "timedOut": null,
              "duration": 5071,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidVerificationMethodController\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"'); // todo: should this be 404 or 400?\n      expect(response.status).to.eq(400); // returns 200\n      expect(response.body.didResolutionMetadata.error).contains(\"invalidDid\"); // doesn't exist\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:did-web.godiddy.com:ad58e1ad-09e9-4873-83c7-42e11809b54b\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:did-web.godiddy.com:ad58e1ad-09e9-4873-83c7-42e11809b54b\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35963/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:35963/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:35963/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:35963/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:35963/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:35963/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:342:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:340:27)",
                "diff": null
              },
              "uuid": "54885943-4461-47b2-bc0b-0330ffa35ffd",
              "parentUUID": "8e1ba190-617a-4e90-83bb-4a5cfba7a321",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "54885943-4461-47b2-bc0b-0330ffa35ffd"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5071,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ef503d9b-4914-4650-b311-f2cd45d4c386",
          "title": "Test Scenario 6E: invalid didDocument.id",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises error when didDocument.id is invalid",
              "fullTitle": "Test Scenario 6E: invalid didDocument.id Raises error when didDocument.id is invalid",
              "timedOut": null,
              "duration": 5067,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidDidDocumentId\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"invalidDid\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/to_be_defined\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/to_be_defined\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35963/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:35963/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:35963/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:35963/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:35963/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:35963/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:366:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:364:27)",
                "diff": null
              },
              "uuid": "570566e6-2f1c-44d3-b793-ac203c9a98cb",
              "parentUUID": "ef503d9b-4914-4650-b311-f2cd45d4c386",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "570566e6-2f1c-44d3-b793-ac203c9a98cb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5067,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d3d8fde5-f5e7-49f0-b020-b0fe6eb50e44",
          "title": "Test Scenario 6F: Invalid didDocument scheme",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises invalidDid error when if scheme is not did",
              "fullTitle": "Test Scenario 6F: Invalid didDocument scheme Raises invalidDid error when if scheme is not did",
              "timedOut": null,
              "duration": 5075,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidDidScheme\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"invalidDid\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/urn:uuid:c0bbe99d-2071-4fd3-a87e-6b710b369108\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/urn:uuid:c0bbe99d-2071-4fd3-a87e-6b710b369108\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35963/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:35963/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:35963/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:35963/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:35963/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:35963/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:388:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:386:27)",
                "diff": null
              },
              "uuid": "ab1b77f8-2d29-4520-bba5-22fee9fbb349",
              "parentUUID": "d3d8fde5-f5e7-49f0-b020-b0fe6eb50e44",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ab1b77f8-2d29-4520-bba5-22fee9fbb349"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5075,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e39f6e96-cbf5-4dff-a104-d94d1601768f",
          "title": "Test Scenario 6G: notAllowedLocalDerivedKey error/warning",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises notAllowedLocalDerivedKey error when did is incorrect",
              "fullTitle": "Test Scenario 6G: notAllowedLocalDerivedKey error/warning Raises notAllowedLocalDerivedKey error when did is incorrect",
              "timedOut": null,
              "duration": 5074,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"notAllowedLocalDerivedKey\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"notAllowedLocalDerivedKey\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:danubetech.com:did:test1\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:danubetech.com:did:test1\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35963/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:35963/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:35963/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:35963/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:35963/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:35963/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:410:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:408:27)",
                "diff": null
              },
              "uuid": "d9363c27-76d2-4672-9e08-598818261c84",
              "parentUUID": "e39f6e96-cbf5-4dff-a104-d94d1601768f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d9363c27-76d2-4672-9e08-598818261c84"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5074,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9a1cb155-b235-4ec5-844e-2c8ba874a1c3",
          "title": "Test Scenario 6H: notAllowedLocalDuplicateKey error/warning",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises notAllowedLocalDuplicateKey error when did is incorrect",
              "fullTitle": "Test Scenario 6H: notAllowedLocalDuplicateKey error/warning Raises notAllowedLocalDuplicateKey error when did is incorrect",
              "timedOut": null,
              "duration": 5061,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidDidDocumentId\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"notAllowedLocalDuplicateKey\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/to_be_defined\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/to_be_defined\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35963/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:35963/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:35963/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:35963/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:35963/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:35963/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:432:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:430:27)",
                "diff": null
              },
              "uuid": "03c6448e-b0b7-4a9d-9788-51856324c4f9",
              "parentUUID": "9a1cb155-b235-4ec5-844e-2c8ba874a1c3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "03c6448e-b0b7-4a9d-9788-51856324c4f9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5061,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5b6e7b14-7461-4a1a-aa76-c2a6c77e5ebc",
          "title": "Test Scenario 6I: notAllowedKeyType error/warning",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises notAllowedKeyType error when did is incorrect",
              "fullTitle": "Test Scenario 6I: notAllowedKeyType error/warning Raises notAllowedKeyType error when did is incorrect",
              "timedOut": null,
              "duration": 5077,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidDidDocumentId\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"notAllowedKeyType\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/to_be_defined\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/to_be_defined\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35963/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:35963/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:35963/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:35963/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:35963/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:35963/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:454:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:452:27)",
                "diff": null
              },
              "uuid": "5b9cd2d8-b1fa-40b7-84cc-522965fcaa51",
              "parentUUID": "5b6e7b14-7461-4a1a-aa76-c2a6c77e5ebc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5b9cd2d8-b1fa-40b7-84cc-522965fcaa51"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5077,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b86b1d5c-8992-4fa0-9337-5c79fadc813a",
          "title": "Test Scenario 6J: notAllowedMethod error/warning",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises notAllowedMethod error when did is incorrect",
              "fullTitle": "Test Scenario 6J: notAllowedMethod error/warning Raises notAllowedMethod error when did is incorrect",
              "timedOut": null,
              "duration": 5079,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"notAllowedMethod\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"notAllowedMethod\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:github:gjgd\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:github:gjgd\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35963/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:35963/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:35963/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:35963/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:35963/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:35963/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:477:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:475:27)",
                "diff": null
              },
              "uuid": "0e9eb8ad-38e9-4597-8573-9d2a3bd8ba0a",
              "parentUUID": "b86b1d5c-8992-4fa0-9337-5c79fadc813a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0e9eb8ad-38e9-4597-8573-9d2a3bd8ba0a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5079,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b1185c15-06f0-45c2-a95a-57315bf56962",
          "title": "Test Scenario 7: DID URLs with fragments",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Can resolve a DID with a fragment",
              "fullTitle": "Test Scenario 7: DID URLs with fragments Can resolve a DID with a fragment",
              "timedOut": null,
              "duration": 5085,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"fragmentDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const fragmentDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + fragmentDid,\n      failOnStatusCode: false,\n      headers: {\n        Accept: \"application/did+ld+json\",\n        Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n      }\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n      expect(response.body).not.to.have.property(\"didDocument\");\n      expect(response.body).to.have.property(\"id\");\n      expect(response.body[\"id\"]).to.contain(decodeURIComponent(fragmentDid.split(\"#\")[0]));\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did%3Asov%3AWRfXPg8dantKVubE3HX8pw%23key-1\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did%3Asov%3AWRfXPg8dantKVubE3HX8pw%23key-1\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35963/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:35963/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:35963/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:35963/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:35963/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:35963/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:499:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:497:27)",
                "diff": null
              },
              "uuid": "a81d9d4c-9fae-441d-bf04-348e89e5760a",
              "parentUUID": "b1185c15-06f0-45c2-a95a-57315bf56962",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a81d9d4c-9fae-441d-bf04-348e89e5760a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5085,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0a9bcd8e-de58-4e18-bbd1-15ab157072ac",
          "title": "Test Scenario 8: Service and relativeRef parameters",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fetches DID",
              "fullTitle": "Test Scenario 8: Service and relativeRef parameters Fetches DID",
              "timedOut": null,
              "duration": 5086,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"relativeParamDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const fragmentDid = list[key];\n    console.log(\"FRAGMENT DID IS\", fragmentDid);\n    cy.request({\n      method: \"GET\",\n      url: endpoint + fragmentDid,\n      headers: {\n        Accept: \"text/uri-list\"\n      },\n      failOnStatusCode: false\n    }).as(\"response\");\n    it(\"MUST return HTTP response status equals 303\", () => {\n      cy.get(\"@response\").then(response => {\n        expect(response.status).to.eq(303);\n      });\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:danubetech.com?service=github&relativeRef=did-method-dns\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:danubetech.com?service=github&relativeRef=did-method-dns\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35963/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:35963/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:35963/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:35963/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:35963/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:35963/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:529:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:526:27)",
                "diff": null
              },
              "uuid": "61cc3f79-ee53-4fad-bf8f-aac1ee6b4eb4",
              "parentUUID": "0a9bcd8e-de58-4e18-bbd1-15ab157072ac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "61cc3f79-ee53-4fad-bf8f-aac1ee6b4eb4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5086,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b8c7a0a6-3ee3-4da0-a297-18b714a8d444",
          "title": "Test Scenario 9: DID URLs with transformKeys",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5086,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"transformKeyDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const transformKeyDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + transformKeyDid,\n      headers: {\n        Accept: \"application/did+ld+json\",\n        Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response).to.be.a(\"object\");\n      response.body.verificationMethod.forEach(out => {\n        expect(out).has.property(\"type\").to.be.oneOf([\"JsonWebKey2020\", \"Ed25519VerificationKey2018\", \"X25519KeyAgreementKey2019\"]);\n      });\n      expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n      expect(response.body).has.property(\"id\", decodeURIComponent(transformKeyDid.split(\"?\")[0].split(\"#\")[0]));\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35963/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:35963/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:35963/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:35963/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:35963/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:35963/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:554:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:552:27)",
                "diff": null
              },
              "uuid": "b8874240-e2ba-4fb3-ab88-411cbd52029d",
              "parentUUID": "b8c7a0a6-3ee3-4da0-a297-18b714a8d444",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b8874240-e2ba-4fb3-ab88-411cbd52029d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5086,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bcc09543-e356-471f-9e30-6026da08a61f",
          "title": "Test Scenario 10: DID URLs with versionTime parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5087,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"versionTimeDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const versionTimeDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + versionTimeDid,\n      headers: {\n        Accept: \"application/did+ld+json\",\n        Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n      expect(response).to.be.a(\"object\");\n      expect(response.body).has.property(\"id\").contains(\"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35963/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:35963/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:35963/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:35963/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:35963/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:35963/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:584:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:582:27)",
                "diff": null
              },
              "uuid": "ce9a82c9-9098-45c1-86bc-70f162d81ce3",
              "parentUUID": "bcc09543-e356-471f-9e30-6026da08a61f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ce9a82c9-9098-45c1-86bc-70f162d81ce3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5087,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3f957b7a-9646-4917-9649-ade0db9cf0fe",
          "title": "Test Scenario 11: DID URLs with versionId parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5089,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"versionIdDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const versionIdDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + versionIdDid,\n      headers: {\n        Accept: \"application/did+ld+json\",\n        Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n      expect(response.body).has.property(\"id\").contains(decodeURIComponent(versionIdDid.split(\"?\")[0]));\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35963/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:35963/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:35963/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:35963/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:35963/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:35963/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:611:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:609:27)",
                "diff": null
              },
              "uuid": "f7bf5095-8ad1-4a9f-9389-342806465453",
              "parentUUID": "3f957b7a-9646-4917-9649-ade0db9cf0fe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f7bf5095-8ad1-4a9f-9389-342806465453"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5089,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1c99b89b-9725-467f-b019-06b3e3e3fe36",
          "title": "Test Scenario 12: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5095,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"application/json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      console.log(\"normal did is:\", normalDid);\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains(\"application/did+json;charset=utf-8\");\n      expect(response.body).has.property(\"id\", normalDid); // expect(response.body[\"keyAgreement\"][0]).to.contain(normalDid);\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35963/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:35963/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:35963/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:35963/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:35963/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:35963/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:638:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:636:27)",
                "diff": null
              },
              "uuid": "d032f00b-4ad5-47cd-aa98-a632a8cf8149",
              "parentUUID": "1c99b89b-9725-467f-b019-06b3e3e3fe36",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d032f00b-4ad5-47cd-aa98-a632a8cf8149"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5095,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8d02a710-b24c-4eb7-95b3-a4fa93461f12",
          "title": "Test Scenario 12B: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5096,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: 'application/ld+json;profile=\"https://w3c-ccg.github.io/did-resolution/\"'\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      console.log(\"normal did is:\", normalDid);\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains('application/ld+json; profile=\"https://w3c-ccg.github.io/did-resolution/\"');\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:35963/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:35963/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35963/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:35963/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:35963/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:35963/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:35963/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:35963/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:35963/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:665:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:35963/__cypress/tests?p=cypress/integration/uniresolver_spec.js:663:27)",
                "diff": null
              },
              "uuid": "f31a3bd7-cb07-48c8-835b-b899a0b435b9",
              "parentUUID": "8d02a710-b24c-4eb7-95b3-a4fa93461f12",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f31a3bd7-cb07-48c8-835b-b899a0b435b9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5096,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.2"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mocha",
        "configFile": "reporterOpts.json",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.1.1"
    }
  }
}