{
  "stats": {
    "suites": 2,
    "tests": 55,
    "passes": 41,
    "pending": 0,
    "failures": 14,
    "start": "2022-08-17T00:36:00.943Z",
    "end": "2022-08-17T00:36:45.561Z",
    "duration": 42799,
    "testsRegistered": 55,
    "passPercent": 74.54545454545455,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d145dd96-3ed6-460f-81e2-654a4caea13b",
      "title": "",
      "fullFile": "cypress/integration/resolver_spec.js",
      "file": "cypress/integration/resolver_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e6896577-049e-4cfd-ac7b-376c0f39afd6",
          "title": "Test Scenario 1: DID Resolution Result overview: https://dev.uniresolver.io/1.0/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 200",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://dev.uniresolver.io/1.0/identifiers/ MUST return HTTP code 200",
              "timedOut": null,
              "duration": 631,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "7e96e874-40e6-4d48-8dae-eb4cdff5dc3a",
              "parentUUID": "e6896577-049e-4cfd-ac7b-376c0f39afd6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://dev.uniresolver.io/1.0/identifiers/ MUST return a JSON object",
              "timedOut": null,
              "duration": 180,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "4f2f9a79-09b7-4e5d-97d0-ed185d6266e7",
              "parentUUID": "e6896577-049e-4cfd-ac7b-376c0f39afd6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have header with Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\" ",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://dev.uniresolver.io/1.0/identifiers/ Should have header with Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\" ",
              "timedOut": null,
              "duration": 474,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.headers[\"content-type\"].replace(/\\s+/g, \"\")).contains('application/ld+json;profile=\"https://w3id.org/did-resolution');\n});",
              "err": {},
              "uuid": "58831cde-a647-4bd1-9172-9515b3a0705f",
              "parentUUID": "e6896577-049e-4cfd-ac7b-376c0f39afd6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Must contain property didDocument",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://dev.uniresolver.io/1.0/identifiers/ Must contain property didDocument",
              "timedOut": null,
              "duration": 194,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "b72ea347-9095-481f-946a-8894ae41fc16",
              "parentUUID": "e6896577-049e-4cfd-ac7b-376c0f39afd6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Must contain property didResolutionMetadata",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://dev.uniresolver.io/1.0/identifiers/ Must contain property didResolutionMetadata",
              "timedOut": null,
              "duration": 196,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didResolutionMetadata\");\n});",
              "err": {},
              "uuid": "06cf60c2-9ecd-4bf2-9d58-6ea7bfc65d03",
              "parentUUID": "e6896577-049e-4cfd-ac7b-376c0f39afd6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Must contain property didDocumentMetadata",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://dev.uniresolver.io/1.0/identifiers/ Must contain property didDocumentMetadata",
              "timedOut": null,
              "duration": 502,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didDocumentMetadata\");\n});",
              "err": {},
              "uuid": "36db90e0-ce50-4cab-b44c-3897471ae14a",
              "parentUUID": "e6896577-049e-4cfd-ac7b-376c0f39afd6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7e96e874-40e6-4d48-8dae-eb4cdff5dc3a",
            "4f2f9a79-09b7-4e5d-97d0-ed185d6266e7",
            "58831cde-a647-4bd1-9172-9515b3a0705f",
            "b72ea347-9095-481f-946a-8894ae41fc16",
            "06cf60c2-9ecd-4bf2-9d58-6ea7bfc65d03",
            "36db90e0-ce50-4cab-b44c-3897471ae14a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2177,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "35da89e6-bb18-40f8-b365-70ce538df8a2",
          "title": "Test Scenario 2: JSON-LD DID document",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should have response status 200",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have response status 200",
              "timedOut": null,
              "duration": 223,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "c7477c4c-ea11-482e-9cc7-ef3f8dd7e4c2",
              "parentUUID": "35da89e6-bb18-40f8-b365-70ce538df8a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 2: JSON-LD DID document MUST return a JSON object",
              "timedOut": null,
              "duration": 802,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "268d68b8-719d-45e2-9ba0-ae412df2f1ca",
              "parentUUID": "35da89e6-bb18-40f8-b365-70ce538df8a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have header with content type",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have header with content type",
              "timedOut": null,
              "duration": 285,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "a14368ee-41a6-4d98-a583-4548645f5b93",
              "parentUUID": "35da89e6-bb18-40f8-b365-70ce538df8a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not have property didDocument",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should not have property didDocument",
              "timedOut": null,
              "duration": 278,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).not.to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "85faf249-e6ca-4986-ac05-da3c1f614633",
              "parentUUID": "35da89e6-bb18-40f8-b365-70ce538df8a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have property @context",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have property @context",
              "timedOut": null,
              "duration": 886,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {},
              "uuid": "2a44afb0-40e6-4de4-b65c-39208122c06b",
              "parentUUID": "35da89e6-bb18-40f8-b365-70ce538df8a2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c7477c4c-ea11-482e-9cc7-ef3f8dd7e4c2",
            "268d68b8-719d-45e2-9ba0-ae412df2f1ca",
            "a14368ee-41a6-4d98-a583-4548645f5b93",
            "85faf249-e6ca-4986-ac05-da3c1f614633",
            "2a44afb0-40e6-4de4-b65c-39208122c06b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2474,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8199dd58-c0d3-4e74-8df2-946ec1207503",
          "title": "Test Scenario 2b: CBOR DID document: https://dev.uniresolver.io/1.0/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 2b: CBOR DID document: https://dev.uniresolver.io/1.0/identifiers/ MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 353,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw\",\n  headers: {\n    Accept: \"application/did+cbor\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "7571a66e-df8b-4a1f-a051-0d07da882d07",
              "parentUUID": "8199dd58-c0d3-4e74-8df2-946ec1207503",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7571a66e-df8b-4a1f-a051-0d07da882d07"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 353,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e0dbf2c2-4b8a-4282-aee9-e7e188ff89a8",
          "title": "Test Scenario 3: Representation not supported",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 406",
              "fullTitle": "Test Scenario 3: Representation not supported MUST return HTTP code 406",
              "timedOut": null,
              "duration": 484,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw\",\n  failOnStatusCode: false,\n  headers: {\n    Accept: \"image/png\"\n  }\n}).then(response => {\n  expect(response.status).to.eq(406);\n});",
              "err": {},
              "uuid": "f2bb3021-77c9-4797-b40a-11aeb8f1057f",
              "parentUUID": "e0dbf2c2-4b8a-4282-aee9-e7e188ff89a8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f2bb3021-77c9-4797-b40a-11aeb8f1057f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 484,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "306f698e-8b5e-41ca-b2f0-564fb473f61f",
          "title": "Test Scenario 4: Deactivated",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 410",
              "fullTitle": "Test Scenario 4: Deactivated MUST return HTTP code 410",
              "timedOut": null,
              "duration": 307,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(410);\n});",
              "err": {},
              "uuid": "deab1061-dbd9-42fa-866b-08d10407fab1",
              "parentUUID": "306f698e-8b5e-41ca-b2f0-564fb473f61f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 4: Deactivated MUST return a JSON object",
              "timedOut": null,
              "duration": 256,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "033e0073-b18c-4113-9aad-79f8722975d0",
              "parentUUID": "306f698e-8b5e-41ca-b2f0-564fb473f61f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type",
              "fullTitle": "Test Scenario 4: Deactivated MUST return HTTP header Content-Type",
              "timedOut": null,
              "duration": 242,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "342fef93-2ae5-486a-926e-3e678b17bf0f",
              "parentUUID": "306f698e-8b5e-41ca-b2f0-564fb473f61f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didDocumentMetadata.deactivated = true",
              "fullTitle": "Test Scenario 4: Deactivated JSON object MUST contain property didDocumentMetadata.deactivated = true",
              "timedOut": null,
              "duration": 244,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didDocumentMetadata.deactivated).to.eq(true);\n});",
              "err": {},
              "uuid": "93d878ce-f3f1-47b0-819d-a2477563481e",
              "parentUUID": "306f698e-8b5e-41ca-b2f0-564fb473f61f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "deab1061-dbd9-42fa-866b-08d10407fab1",
            "033e0073-b18c-4113-9aad-79f8722975d0",
            "342fef93-2ae5-486a-926e-3e678b17bf0f",
            "93d878ce-f3f1-47b0-819d-a2477563481e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1049,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "671c516a-1d9d-4162-9e34-2baf782b42ea",
          "title": "Test Scenario 5: Not found",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 404",
              "fullTitle": "Test Scenario 5: Not found MUST return HTTP code 404",
              "timedOut": null,
              "duration": 39,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(404);\n});",
              "err": {},
              "uuid": "7956fb55-a70e-44f8-ac75-c66dbc3a373e",
              "parentUUID": "671c516a-1d9d-4162-9e34-2baf782b42ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "fullTitle": "Test Scenario 5: Not found MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "timedOut": null,
              "duration": 48,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "8e052e96-732c-49a6-b10f-d406dc106d50",
              "parentUUID": "671c516a-1d9d-4162-9e34-2baf782b42ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 5: Not found MUST return a JSON object",
              "timedOut": null,
              "duration": 48,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "bc0f6369-d3df-4927-9167-4674c7e88a5e",
              "parentUUID": "671c516a-1d9d-4162-9e34-2baf782b42ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didResolutionMetadata.error = \"notFound\"",
              "fullTitle": "Test Scenario 5: Not found JSON object MUST contain property didResolutionMetadata.error = \"notFound\"",
              "timedOut": null,
              "duration": 44,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://dev.uniresolver.io/1.0/identifiers/did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didResolutionMetadata.error).to.eq(\"notFound\");\n});",
              "err": {},
              "uuid": "ee73913d-3a4e-403a-bc45-e3b8d0f2a94a",
              "parentUUID": "671c516a-1d9d-4162-9e34-2baf782b42ea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7956fb55-a70e-44f8-ac75-c66dbc3a373e",
            "8e052e96-732c-49a6-b10f-d406dc106d50",
            "bc0f6369-d3df-4927-9167-4674c7e88a5e",
            "ee73913d-3a4e-403a-bc45-e3b8d0f2a94a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 179,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "838888fa-88b3-4b50-a6b5-57da0a3576d0",
          "title": "Test Scenario 6: Invalid DID",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 400",
              "fullTitle": "Test Scenario 6: Invalid DID MUST return HTTP code 400",
              "timedOut": null,
              "duration": 28,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n});",
              "err": {},
              "uuid": "eee169cc-9d9e-4621-bb13-451a937881e3",
              "parentUUID": "838888fa-88b3-4b50-a6b5-57da0a3576d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "fullTitle": "Test Scenario 6: Invalid DID MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "timedOut": null,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "8593eb25-74ef-497b-86c6-53ef28c4fa5e",
              "parentUUID": "838888fa-88b3-4b50-a6b5-57da0a3576d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 6: Invalid DID MUST return a JSON object",
              "timedOut": null,
              "duration": 56,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "5598268b-a94a-4ca9-94fc-831a67f2780d",
              "parentUUID": "838888fa-88b3-4b50-a6b5-57da0a3576d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didResolutionMetadata.error = \"invalidDid\"",
              "fullTitle": "Test Scenario 6: Invalid DID JSON object MUST contain property didResolutionMetadata.error = \"invalidDid\"",
              "timedOut": null,
              "duration": 39,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didResolutionMetadata.error).to.contain(\"invalidDid\");\n});",
              "err": {},
              "uuid": "f4ec45a4-70c9-4436-b0c4-5952909387cc",
              "parentUUID": "838888fa-88b3-4b50-a6b5-57da0a3576d0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eee169cc-9d9e-4621-bb13-451a937881e3",
            "8593eb25-74ef-497b-86c6-53ef28c4fa5e",
            "5598268b-a94a-4ca9-94fc-831a67f2780d",
            "f4ec45a4-70c9-4436-b0c4-5952909387cc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 149,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "32c1e410-4f27-460a-a60f-ec351c708677",
          "title": "Test Scenario 7: DID URLs with fragments",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Must return HTTP code 200",
              "fullTitle": "Test Scenario 7: DID URLs with fragments Must return HTTP code 200",
              "timedOut": null,
              "duration": 44,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "AssertionError: expected 400 to equal 200",
                "estack": "AssertionError: expected 400 to equal 200\n    at Context.eval (http://localhost:46511/__cypress/tests?p=cypress/integration/resolver_spec.js:356:36)",
                "diff": "- 400\n+ 200\n"
              },
              "uuid": "67abfebf-486b-4ce5-b2ea-6872798a1fb7",
              "parentUUID": "32c1e410-4f27-460a-a60f-ec351c708677",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 7: DID URLs with fragments MUST return a JSON object",
              "timedOut": null,
              "duration": 54,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "7bd87fed-ff54-4d3d-9d30-5cdfd080a38a",
              "parentUUID": "32c1e410-4f27-460a-a60f-ec351c708677",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/did+ld+json",
              "fullTitle": "Test Scenario 7: DID URLs with fragments MUST return HTTP header Content-Type with value application/did+ld+json",
              "timedOut": null,
              "duration": 43,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "d23de5cc-3658-4c46-b439-e25bfd7eef33",
              "parentUUID": "32c1e410-4f27-460a-a60f-ec351c708677",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST NOT contain property didDocument",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST NOT contain property didDocument",
              "timedOut": null,
              "duration": 28,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).not.to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "57e1d940-f0e7-4171-b136-7b18bc81d29e",
              "parentUUID": "32c1e410-4f27-460a-a60f-ec351c708677",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property @context",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property @context",
              "timedOut": null,
              "duration": 34,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {
                "message": "AssertionError: expected '' to have property '@context'",
                "estack": "AssertionError: expected '' to have property '@context'\n    at Context.eval (http://localhost:46511/__cypress/tests?p=cypress/integration/resolver_spec.js:376:39)",
                "diff": null
              },
              "uuid": "676fbb93-34da-4a1e-920d-2843e04b7677",
              "parentUUID": "32c1e410-4f27-460a-a60f-ec351c708677",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property type",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property type",
              "timedOut": null,
              "duration": 49,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"type\");\n});",
              "err": {
                "message": "AssertionError: expected '' to have property 'type'",
                "estack": "AssertionError: expected '' to have property 'type'\n    at Context.eval (http://localhost:46511/__cypress/tests?p=cypress/integration/resolver_spec.js:381:39)",
                "diff": null
              },
              "uuid": "81b9a200-df49-4132-9a98-3d9a3e0303eb",
              "parentUUID": "32c1e410-4f27-460a-a60f-ec351c708677",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property id with value application/did+ld+json",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property id with value application/did+ld+json",
              "timedOut": null,
              "duration": 65,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"id\");\n  expect(response.body[\"id\"]).to.contain(\"did:sov:WRfXPg8dantKVubE3HX8pw#key-1\");\n});",
              "err": {
                "message": "AssertionError: expected '' to have property 'id'",
                "estack": "AssertionError: expected '' to have property 'id'\n    at Context.eval (http://localhost:46511/__cypress/tests?p=cypress/integration/resolver_spec.js:386:39)",
                "diff": null
              },
              "uuid": "0032330a-3f92-4a98-88c4-96aee3ded4f4",
              "parentUUID": "32c1e410-4f27-460a-a60f-ec351c708677",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7bd87fed-ff54-4d3d-9d30-5cdfd080a38a",
            "d23de5cc-3658-4c46-b439-e25bfd7eef33",
            "57e1d940-f0e7-4171-b136-7b18bc81d29e"
          ],
          "failures": [
            "67abfebf-486b-4ce5-b2ea-6872798a1fb7",
            "676fbb93-34da-4a1e-920d-2843e04b7677",
            "81b9a200-df49-4132-9a98-3d9a3e0303eb",
            "0032330a-3f92-4a98-88c4-96aee3ded4f4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 317,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "535b0aa2-c883-470d-978b-1d6f995df182",
          "title": "Test Scenario 8: Service and relativeRef parameters",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fetches DID",
              "fullTitle": "Test Scenario 8: Service and relativeRef parameters Fetches DID",
              "timedOut": null,
              "duration": 67,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:web:danubetech.com?service=github&relativeRef=did-method-dns\",\n  headers: {\n    Accept: \"text/uri-list\"\n  },\n  failOnStatusCode: false\n}).as(\"response\");\nit(\"MUST return HTTP response status equals 303\", () => {\n  cy.get(\"@response\").then(response => {\n    expect(response.status).to.eq(303);\n  });\n});\nit(\"MUST return a JSON object\", () => {\n  cy.get(\"@request\").then(response => {\n    expect(response).to.be.a(\"object\");\n  });\n});",
              "err": {},
              "uuid": "ffc1fdc9-eff7-4bad-8a44-a96cf8fd7f73",
              "parentUUID": "535b0aa2-c883-470d-978b-1d6f995df182",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ffc1fdc9-eff7-4bad-8a44-a96cf8fd7f73"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 67,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "41ddaa14-97ff-4a29-a8b9-2ad038d989f3",
          "title": "Test Scenario 9: DID URLs with transformKeys",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 35,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\",\n    Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "AssertionError: expected 400 to equal 200",
                "estack": "AssertionError: expected 400 to equal 200\n    at Context.eval (http://localhost:46511/__cypress/tests?p=cypress/integration/resolver_spec.js:431:36)",
                "diff": "- 400\n+ 200\n"
              },
              "uuid": "450941b6-d629-4931-af8b-75fa44e815fd",
              "parentUUID": "41ddaa14-97ff-4a29-a8b9-2ad038d989f3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return a JSON object",
              "timedOut": null,
              "duration": 54,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\",\n    Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "4626319f-0eb1-4571-8548-583142303c57",
              "parentUUID": "41ddaa14-97ff-4a29-a8b9-2ad038d989f3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return property verificationMethod of type JsonWebKey2020",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return property verificationMethod of type JsonWebKey2020",
              "timedOut": null,
              "duration": 37,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\",\n    Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  response.body.verificationMethod.forEach(out => {\n    expect(out).has.property(\"type\", \"JsonWebKey2020\");\n  });\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'forEach')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'forEach')\n    at Context.eval (http://localhost:46511/__cypress/tests?p=cypress/integration/resolver_spec.js:457:42)",
                "diff": null
              },
              "uuid": "170f6ffd-bd72-4bca-b17d-ea6813d47e38",
              "parentUUID": "41ddaa14-97ff-4a29-a8b9-2ad038d989f3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 59,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\",\n    Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "583e1e35-e0a8-4159-bee8-1425b16e2baf",
              "parentUUID": "41ddaa14-97ff-4a29-a8b9-2ad038d989f3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return property id with value did:sov:WRfXPg8dantKVubE3HX8pw",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return property id with value did:sov:WRfXPg8dantKVubE3HX8pw",
              "timedOut": null,
              "duration": 37,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\",\n    Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:WRfXPg8dantKVubE3HX8pw\");\n});",
              "err": {
                "message": "AssertionError: expected '' to have property 'id'",
                "estack": "AssertionError: expected '' to have property 'id'\n    at Context.eval (http://localhost:46511/__cypress/tests?p=cypress/integration/resolver_spec.js:485:35)",
                "diff": null
              },
              "uuid": "491eddcf-0baf-4620-ae68-1059378e2160",
              "parentUUID": "41ddaa14-97ff-4a29-a8b9-2ad038d989f3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4626319f-0eb1-4571-8548-583142303c57",
            "583e1e35-e0a8-4159-bee8-1425b16e2baf"
          ],
          "failures": [
            "450941b6-d629-4931-af8b-75fa44e815fd",
            "170f6ffd-bd72-4bca-b17d-ea6813d47e38",
            "491eddcf-0baf-4620-ae68-1059378e2160"
          ],
          "pending": [],
          "skipped": [],
          "duration": 222,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c484734a-9598-4c62-9703-f3f05aaadef7",
          "title": "Test Scenario 12: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 195,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "3fb60883-19e2-42a0-a562-d07aaec01793",
              "parentUUID": "c484734a-9598-4c62-9703-f3f05aaadef7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains(\"application/did+json;charset=utf-8\");\n});",
              "err": {},
              "uuid": "dc0e9374-ed58-4ac9-9b7f-7e6362ff899f",
              "parentUUID": "c484734a-9598-4c62-9703-f3f05aaadef7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property id",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST contain property id",
              "timedOut": null,
              "duration": 533,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\");\n});",
              "err": {},
              "uuid": "24d290f1-bedd-4077-b9e3-cf730d10edf2",
              "parentUUID": "c484734a-9598-4c62-9703-f3f05aaadef7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property keyAgreement",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST contain property keyAgreement",
              "timedOut": null,
              "duration": 207,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body[\"keyAgreement\"][0]).to.contain(\"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\");\n});",
              "err": {},
              "uuid": "15fbe8cf-c1c0-46f2-a69d-d294357688dd",
              "parentUUID": "c484734a-9598-4c62-9703-f3f05aaadef7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3fb60883-19e2-42a0-a562-d07aaec01793",
            "dc0e9374-ed58-4ac9-9b7f-7e6362ff899f",
            "24d290f1-bedd-4077-b9e3-cf730d10edf2",
            "15fbe8cf-c1c0-46f2-a69d-d294357688dd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1049,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7926dc75-8d1c-4c2f-8af8-8685a262dc65",
          "title": "Test Scenario 12B: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 203,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: 'application/ld+json;profile=\"https://w3id.org/did-resolution\"',\n    Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "c9fa0ff4-6902-4a21-9a4c-2c56256450a9",
              "parentUUID": "7926dc75-8d1c-4c2f-8af8-8685a262dc65",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "HTTP response must contain content-type property with value application/did+json;charset=utf-8",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL HTTP response must contain content-type property with value application/did+json;charset=utf-8",
              "timedOut": null,
              "duration": 850,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: 'application/ld+json;profile=\"https://w3id.org/did-resolution\"',\n    Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "37960480-5146-4f35-a319-3eb8b5387908",
              "parentUUID": "7926dc75-8d1c-4c2f-8af8-8685a262dc65",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c9fa0ff4-6902-4a21-9a4c-2c56256450a9",
            "37960480-5146-4f35-a319-3eb8b5387908"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1053,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "342dc924-8492-428a-ba33-8fac5778063a",
      "title": "",
      "fullFile": "cypress/integration/uniresolver_fixtures_spec.js",
      "file": "cypress/integration/uniresolver_fixtures_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "11c52614-31f2-4bed-8b95-2dc150136d66",
          "title": "Test Scenario 1: DID Resolution Result fixtures: https://dev.uniresolver.io/1.0/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved",
              "fullTitle": "Test Scenario 1: DID Resolution Result fixtures: https://dev.uniresolver.io/1.0/identifiers/ A correct DID can be resolved",
              "timedOut": null,
              "duration": 6387,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.headers[\"content-type\"].replace(/\\s+/g, \"\")).contains('application/ld+json;profile=\"https://w3id.org/did-resolution');\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocument\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didResolutionMetadata\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocumentMetadata\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ebsi:z25ZZFS7FweHsm9MX2Qvc6gc\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ebsi:z25ZZFS7FweHsm9MX2Qvc6gc\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:46511/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:46511/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:46511/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:46511/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46511/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46511/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46511/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46511/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:46511/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46511/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46511/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46511/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:46511/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:125:13)",
                "diff": null
              },
              "uuid": "1beab5a2-f5b6-4f34-947e-574097e8148b",
              "parentUUID": "11c52614-31f2-4bed-8b95-2dc150136d66",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "1beab5a2-f5b6-4f34-947e-574097e8148b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 6387,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dd2596e3-86f9-4b15-84ea-ccf4e088cd03",
          "title": "Test Scenario 2: JSON-LD DID document",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved with header input",
              "fullTitle": "Test Scenario 2: JSON-LD DID document A correct DID can be resolved with header input",
              "timedOut": null,
              "duration": 6189,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"application/did+ld+json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n      expect(response.body).not.to.have.property(\"didDocument\");\n      expect(response.body).has.property(\"id\").contains(normalDid);\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ebsi:z25ZZFS7FweHsm9MX2Qvc6gc\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ebsi:z25ZZFS7FweHsm9MX2Qvc6gc\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:46511/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:46511/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:46511/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:46511/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46511/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46511/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46511/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46511/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:46511/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46511/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46511/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46511/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:46511/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:151:13)",
                "diff": null
              },
              "uuid": "915f10ac-cb33-4c66-b421-996f98f93c28",
              "parentUUID": "dd2596e3-86f9-4b15-84ea-ccf4e088cd03",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "915f10ac-cb33-4c66-b421-996f98f93c28"
          ],
          "pending": [],
          "skipped": [],
          "duration": 6189,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "14a8a51f-b72d-4397-8109-199b6c21ce4a",
          "title": "Test Scenario 3: Representation not supported",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Shows an error when a representation is prompted",
              "fullTitle": "Test Scenario 3: Representation not supported Shows an error when a representation is prompted",
              "timedOut": null,
              "duration": 6716,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"image/png\"\n      },\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(406);\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ebsi:z25ZZFS7FweHsm9MX2Qvc6gc\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ebsi:z25ZZFS7FweHsm9MX2Qvc6gc\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:46511/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:46511/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:46511/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:46511/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46511/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46511/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46511/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46511/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:46511/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46511/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46511/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46511/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:46511/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:200:13)",
                "diff": null
              },
              "uuid": "970a45ac-fa37-40ef-875e-4db72ca5c650",
              "parentUUID": "14a8a51f-b72d-4397-8109-199b6c21ce4a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "970a45ac-fa37-40ef-875e-4db72ca5c650"
          ],
          "pending": [],
          "skipped": [],
          "duration": 6716,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "426c552d-c936-4122-8044-5eaf4bedba78",
          "title": "Test Scenario 4: Deactivated",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns an HTTP code of 410 for deactivated DIDs",
              "fullTitle": "Test Scenario 4: Deactivated Returns an HTTP code of 410 for deactivated DIDs",
              "timedOut": null,
              "duration": 309,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"deacDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const deacDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + deacDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(410);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"'); //FAILS\n      expect(response.body.didDocumentMetadata.deactivated).to.eq(true);\n    });\n  });\n});",
              "err": {},
              "uuid": "6786029f-de91-49e9-aec5-a5a07f7c3117",
              "parentUUID": "426c552d-c936-4122-8044-5eaf4bedba78",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6786029f-de91-49e9-aec5-a5a07f7c3117"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 309,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "aeb2f4e5-6510-4ad1-add5-bf553584129e",
          "title": "Test Scenario 5: Not found",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns an HTTP code of 404 for non-existent DIDs",
              "fullTitle": "Test Scenario 5: Not found Returns an HTTP code of 404 for non-existent DIDs",
              "timedOut": null,
              "duration": 46,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"nonExisDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const nonExDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + nonExDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(404);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.body.didResolutionMetadata.error).to.eq(\"notFound\");\n    });\n  });\n});",
              "err": {},
              "uuid": "6e33424a-edcc-4241-83d0-fcaf0ca71ffb",
              "parentUUID": "aeb2f4e5-6510-4ad1-add5-bf553584129e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6e33424a-edcc-4241-83d0-fcaf0ca71ffb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 46,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "389583f7-aa16-4844-9a21-e8d40e127b4f",
          "title": "Test Scenario 6: Invalid DID",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns a HTTP code of 400 for an invalid DID",
              "fullTitle": "Test Scenario 6: Invalid DID Returns a HTTP code of 400 for an invalid DID",
              "timedOut": null,
              "duration": 71,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"invalidDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(400);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.body.didResolutionMetadata.error).contains(\"invalidDid\");\n    });\n  });\n});",
              "err": {},
              "uuid": "ce24ae4f-975b-480a-9934-d5ec1d12f49a",
              "parentUUID": "389583f7-aa16-4844-9a21-e8d40e127b4f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce24ae4f-975b-480a-9934-d5ec1d12f49a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 71,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "850fd198-ebe0-4dea-bbd3-20adc751d19d",
          "title": "Test Scenario 7: DID URLs with fragments",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Can resolve a DID with a fragment",
              "fullTitle": "Test Scenario 7: DID URLs with fragments Can resolve a DID with a fragment",
              "timedOut": null,
              "duration": 43,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"fragmentDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const fragmentDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + fragmentDid,\n      failOnStatusCode: false,\n      headers: {\n        Accept: \"application/did+ld+json\",\n        Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n      }\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n      expect(response.body).not.to.have.property(\"didDocument\");\n      expect(response.body).to.have.property(\"id\");\n      expect(response.body[\"id\"]).to.contain(decodeURIComponent(fragmentDid.split(\"#\")[0]));\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 400 to equal 200",
                "estack": "AssertionError: expected 400 to equal 200\n    at Context.eval (http://localhost:46511/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:289:40)",
                "diff": "- 400\n+ 200\n"
              },
              "uuid": "b6ec70bc-952c-45d8-9def-432d5fc4921b",
              "parentUUID": "850fd198-ebe0-4dea-bbd3-20adc751d19d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b6ec70bc-952c-45d8-9def-432d5fc4921b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 43,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7dedf96b-4dd5-4d38-a24f-f7e7210b24a5",
          "title": "Test Scenario 8: Service and relativeRef parameters",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fetches DID",
              "fullTitle": "Test Scenario 8: Service and relativeRef parameters Fetches DID",
              "timedOut": null,
              "duration": 60,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"relativeParamDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const fragmentDid = list[key];\n    console.log(\"FRAGMENT DID IS\", fragmentDid);\n    cy.request({\n      method: \"GET\",\n      url: endpoint + fragmentDid,\n      headers: {\n        Accept: \"text/uri-list\"\n      },\n      failOnStatusCode: false\n    }).as(\"response\");\n    it(\"MUST return HTTP response status equals 303\", () => {\n      cy.get(\"@response\").then(response => {\n        expect(response.status).to.eq(303);\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "1d3995d0-b70d-4aa2-9d84-c7005bc15b98",
              "parentUUID": "7dedf96b-4dd5-4d38-a24f-f7e7210b24a5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1d3995d0-b70d-4aa2-9d84-c7005bc15b98"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 60,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1c920e60-6ff4-4abe-a80d-1f26651bd8e5",
          "title": "Test Scenario 9: DID URLs with transformKeys",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 48,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"transformKeyDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const transformKeyDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + transformKeyDid,\n      headers: {\n        Accept: \"application/did+ld+json\",\n        Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response).to.be.a(\"object\");\n      response.body.verificationMethod.forEach(out => {\n        expect(out).has.property(\"type\").to.be.oneOf([\"JsonWebKey2020\", \"Ed25519VerificationKey2018\", \"X25519KeyAgreementKey2019\"]);\n      });\n      expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n      expect(response.body).has.property(\"id\", decodeURIComponent(transformKeyDid.split(\"?\")[0].split(\"#\")[0]));\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 400 to equal 200",
                "estack": "AssertionError: expected 400 to equal 200\n    at Context.eval (http://localhost:46511/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:343:40)",
                "diff": "- 400\n+ 200\n"
              },
              "uuid": "aeb1accd-d57d-4fe6-a3f2-a212cba56938",
              "parentUUID": "1c920e60-6ff4-4abe-a80d-1f26651bd8e5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "aeb1accd-d57d-4fe6-a3f2-a212cba56938"
          ],
          "pending": [],
          "skipped": [],
          "duration": 48,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "362e8691-4761-4401-ab5c-8befbf5bdcf1",
          "title": "Test Scenario 12: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 6840,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"application/json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      console.log(\"normal did is:\", normalDid);\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains(\"application/did+json;charset=utf-8\");\n      expect(response.body).has.property(\"id\", normalDid); // expect(response.body[\"keyAgreement\"][0]).to.contain(normalDid);\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ebsi:z25ZZFS7FweHsm9MX2Qvc6gc\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ebsi:z25ZZFS7FweHsm9MX2Qvc6gc\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:46511/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:46511/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:46511/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:46511/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46511/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46511/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46511/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46511/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:46511/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46511/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46511/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46511/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:46511/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:375:13)",
                "diff": null
              },
              "uuid": "ef3bb1f4-53c4-4c82-b8f9-3fdc2347d9e7",
              "parentUUID": "362e8691-4761-4401-ab5c-8befbf5bdcf1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ef3bb1f4-53c4-4c82-b8f9-3fdc2347d9e7"
          ],
          "pending": [],
          "skipped": [],
          "duration": 6840,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a9ed506e-0a4c-45c2-996c-fcc18b6ab109",
          "title": "Test Scenario 12B: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 6517,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: 'application/ld+json;profile=\"https://w3id.org/did-resolution\"'\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      console.log(\"normal did is:\", normalDid);\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"].replace(/\\s+/g, \"\")).contains('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ebsi:z25ZZFS7FweHsm9MX2Qvc6gc\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ebsi:z25ZZFS7FweHsm9MX2Qvc6gc\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:46511/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:46511/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:46511/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:46511/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46511/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46511/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46511/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46511/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:46511/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46511/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46511/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46511/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:46511/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:400:13)",
                "diff": null
              },
              "uuid": "6d3530a3-e747-4b62-b1b0-d79453416d4f",
              "parentUUID": "a9ed506e-0a4c-45c2-996c-fcc18b6ab109",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "6d3530a3-e747-4b62-b1b0-d79453416d4f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 6517,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.2"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mocha",
        "configFile": "reporterOpts.json",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.1.1"
    }
  }
}