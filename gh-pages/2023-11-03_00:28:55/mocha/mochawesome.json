{
  "stats": {
    "suites": 22,
    "tests": 22,
    "passes": 1,
    "pending": 0,
    "failures": 21,
    "start": "2023-11-03T00:27:13.152Z",
    "end": "2023-11-03T00:28:50.188Z",
    "duration": 97036,
    "testsRegistered": 22,
    "passPercent": 4.545454545454546,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7d344769-8b2c-4c51-bbf0-b34e2925e777",
      "title": "",
      "fullFile": "cypress/integration/uniresolver_spec.js",
      "file": "cypress/integration/uniresolver_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "032182f7-1783-48a4-97fa-238422900d60",
          "title": "Test Scenario 1: DID Resolution Result fixtures: https://dev.uniresolver.io/1.0/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved",
              "fullTitle": "Test Scenario 1: DID Resolution Result fixtures: https://dev.uniresolver.io/1.0/identifiers/ A correct DID can be resolved",
              "timedOut": null,
              "duration": 5103,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.clearCookies();\ncy.fixture(path_example_dids).its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.headers[\"content-type\"].replace(/\\s+/g, \"\")).contains('application/ld+json;profile=\"https://w3id.org/did-resolution');\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response).to.be.a(\"object\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocument\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didResolutionMetadata\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocumentMetadata\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body.didDocument.id).to.be.a(\"string\").and.satisfy(msg => msg.startsWith(\"did:\"));\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43263/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:43263/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:43263/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:43263/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:43263/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:43263/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:110:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:108:27)",
                "diff": null
              },
              "uuid": "3f6df777-f04b-4a46-b217-3f97bdc55783",
              "parentUUID": "032182f7-1783-48a4-97fa-238422900d60",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "3f6df777-f04b-4a46-b217-3f97bdc55783"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5103,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "febe4426-cc45-419c-8df5-e42d8ff28a3d",
          "title": "Test Scenario 2: JSON-LD DID document",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved with header input",
              "fullTitle": "Test Scenario 2: JSON-LD DID document A correct DID can be resolved with header input",
              "timedOut": null,
              "duration": 5113,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"application/did+ld+json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n      cy.get(\"@request\").then(response => {\n        expect(response).to.be.a(\"object\");\n      });\n      expect(response.body).not.to.have.property(\"didDocument\");\n      expect(response.body[\"id\"]).to.contain(normalDid);\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43263/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:43263/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:43263/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:43263/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:43263/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:43263/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:148:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:146:27)",
                "diff": null
              },
              "uuid": "45070f26-e0db-47a2-b7ab-37f9c80afa93",
              "parentUUID": "febe4426-cc45-419c-8df5-e42d8ff28a3d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "45070f26-e0db-47a2-b7ab-37f9c80afa93"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5113,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f2267c19-4999-4a35-99fd-4ba15aa9adcf",
          "title": "Test Scenario 3: Representation not supported",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Shows an error when a representation is prompted",
              "fullTitle": "Test Scenario 3: Representation not supported Shows an error when a representation is prompted",
              "timedOut": null,
              "duration": 5065,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"image/png\"\n      },\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(406);\n      console.log(response);\n      expect(response.body.dereferencingMetadata.error).to.eq('\"representationNotSupported\"');\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43263/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:43263/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:43263/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:43263/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:43263/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:43263/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:203:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:201:27)",
                "diff": null
              },
              "uuid": "5f81e9ac-c854-4d91-a888-b85639ee3d77",
              "parentUUID": "f2267c19-4999-4a35-99fd-4ba15aa9adcf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5f81e9ac-c854-4d91-a888-b85639ee3d77"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5065,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d9bdf140-ad2f-4d74-b801-b6cc91b467e5",
          "title": "Test Scenario 4: Deactivated",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns an HTTP code of 410 for deactivated DIDs",
              "fullTitle": "Test Scenario 4: Deactivated Returns an HTTP code of 410 for deactivated DIDs",
              "timedOut": null,
              "duration": 5075,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"deacDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const deacDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + deacDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(410);\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.body.didDocumentMetadata.deactivated).to.eq(true);\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:indicio:test:16vv8izCToK4svjYjvsp4r\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:indicio:test:16vv8izCToK4svjYjvsp4r\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43263/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:43263/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:43263/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:43263/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:43263/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:43263/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:227:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:225:27)",
                "diff": null
              },
              "uuid": "5c641eca-4ac7-4611-a402-6ce173fb4ffe",
              "parentUUID": "d9bdf140-ad2f-4d74-b801-b6cc91b467e5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5c641eca-4ac7-4611-a402-6ce173fb4ffe"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5075,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "619ce677-99a2-445f-bcf6-c6e9e5dcd391",
          "title": "Test Scenario 5: Not found",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns an HTTP code of 404 for non-existent DIDs",
              "fullTitle": "Test Scenario 5: Not found Returns an HTTP code of 404 for non-existent DIDs",
              "timedOut": null,
              "duration": 5063,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"nonExisDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const nonExDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + nonExDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(404);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response).to.be.a(\"object\");\n      expect(response.body.didResolutionMetadata.error).to.eq(\"notFound\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:0000000000000000000000\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:0000000000000000000000\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43263/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:43263/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:43263/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:43263/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:43263/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:43263/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:249:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:247:27)",
                "diff": null
              },
              "uuid": "4897e532-e158-4cf6-ae11-663a2a1fd21d",
              "parentUUID": "619ce677-99a2-445f-bcf6-c6e9e5dcd391",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "4897e532-e158-4cf6-ae11-663a2a1fd21d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5063,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cd24204e-2338-417b-a38f-bf2efb1536bb",
          "title": "Test Scenario 6A: Invalid DID",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns a HTTP code of 400 for an invalid DID",
              "fullTitle": "Test Scenario 6A: Invalid DID Returns a HTTP code of 400 for an invalid DID",
              "timedOut": null,
              "duration": 5080,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(400);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response).to.be.a(\"object\");\n      expect(response.body.didResolutionMetadata.error).contains(\"invalidDid\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:example_222\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:example_222\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43263/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:43263/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:43263/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:43263/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:43263/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:43263/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:271:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:269:27)",
                "diff": null
              },
              "uuid": "18ff4bd2-eefe-4652-98f6-604ad81e4a9a",
              "parentUUID": "cd24204e-2338-417b-a38f-bf2efb1536bb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "18ff4bd2-eefe-4652-98f6-604ad81e4a9a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5080,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c670271e-1108-4fd6-9f01-d352b6dedd51",
          "title": "Test Scenario 6B: method not supported DIDs",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises an error for unsupported DID methods",
              "fullTitle": "Test Scenario 6B: method not supported DIDs Raises an error for unsupported DID methods",
              "timedOut": null,
              "duration": 4767,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"methodNotSupportedDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.body.didResolutionMetadata.error).contains(\"methodNotSupported\");\n      expect(response).to.be.a(\"object\"); // todo: should this be 404 or 400?\n      expect(response.status).to.eq(400); // returns 501\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 501 to equal 400",
                "estack": "AssertionError: expected 501 to equal 400\n    at Context.eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:301:40)",
                "diff": "- 501\n+ 400\n"
              },
              "uuid": "5cb2c703-187c-4793-9239-b14d5dd88825",
              "parentUUID": "c670271e-1108-4fd6-9f01-d352b6dedd51",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5cb2c703-187c-4793-9239-b14d5dd88825"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4767,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c26724fb-6f6a-426a-a65f-2c087cc4b972",
          "title": "Test Scenario 6C: invalid verificationMethod.id",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises error when verificationMethod.id is invalid",
              "fullTitle": "Test Scenario 6C: invalid verificationMethod.id Raises error when verificationMethod.id is invalid",
              "timedOut": null,
              "duration": 5066,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidVerificationMethodId\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"'); // todo: should this be 404 or 400?\n      expect(response.status).to.eq(400); // return 200\n      expect(response.body.didResolutionMetadata.error).contains(\"invalidDidUrl\"); // doesn't exist\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:did-web.godiddy.com:ad58e1ad-09e9-4873-83c7-42e11809b54b\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:did-web.godiddy.com:ad58e1ad-09e9-4873-83c7-42e11809b54b\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43263/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:43263/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:43263/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:43263/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:43263/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:43263/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:318:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:316:27)",
                "diff": null
              },
              "uuid": "85d77705-a0f9-4846-a0af-9cb7abaed4dc",
              "parentUUID": "c26724fb-6f6a-426a-a65f-2c087cc4b972",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "85d77705-a0f9-4846-a0af-9cb7abaed4dc"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5066,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "172f38d4-a53a-4fab-b326-ac8b48f68beb",
          "title": "Test Scenario 6D: invalid verificationMethod.controller",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises error when verificationMethod.controller is invalid",
              "fullTitle": "Test Scenario 6D: invalid verificationMethod.controller Raises error when verificationMethod.controller is invalid",
              "timedOut": null,
              "duration": 5070,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidVerificationMethodController\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"'); // todo: should this be 404 or 400?\n      expect(response.status).to.eq(400); // returns 200\n      expect(response.body.didResolutionMetadata.error).contains(\"invalidDid\"); // doesn't exist\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:did-web.godiddy.com:ad58e1ad-09e9-4873-83c7-42e11809b54b\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:did-web.godiddy.com:ad58e1ad-09e9-4873-83c7-42e11809b54b\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43263/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:43263/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:43263/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:43263/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:43263/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:43263/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:342:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:340:27)",
                "diff": null
              },
              "uuid": "10fc2769-9652-4ffe-9527-a63429d9afe8",
              "parentUUID": "172f38d4-a53a-4fab-b326-ac8b48f68beb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "10fc2769-9652-4ffe-9527-a63429d9afe8"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5070,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5becadfd-2b1d-43d9-838d-51449240b62d",
          "title": "Test Scenario 6E: invalid didDocument.id",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises error when didDocument.id is invalid",
              "fullTitle": "Test Scenario 6E: invalid didDocument.id Raises error when didDocument.id is invalid",
              "timedOut": null,
              "duration": 5090,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidDidDocumentId\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"invalidDid\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/to_be_defined\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/to_be_defined\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43263/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:43263/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:43263/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:43263/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:43263/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:43263/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:366:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:364:27)",
                "diff": null
              },
              "uuid": "8d0d1c9f-6ff0-4f55-abae-8edab2404a91",
              "parentUUID": "5becadfd-2b1d-43d9-838d-51449240b62d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8d0d1c9f-6ff0-4f55-abae-8edab2404a91"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5090,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "463317d7-2ef2-4596-875d-71cdb942f4d6",
          "title": "Test Scenario 6F: Invalid didDocument scheme",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises invalidDid error when if scheme is not did",
              "fullTitle": "Test Scenario 6F: Invalid didDocument scheme Raises invalidDid error when if scheme is not did",
              "timedOut": null,
              "duration": 111,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidDidScheme\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"invalidDid\");\n    });\n  });\n});",
              "err": {},
              "uuid": "660e2be0-3710-4bf4-881f-89e530e0cb38",
              "parentUUID": "463317d7-2ef2-4596-875d-71cdb942f4d6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "660e2be0-3710-4bf4-881f-89e530e0cb38"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 111,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "07916362-c0f9-41a2-beb9-4ef75fb703cd",
          "title": "Test Scenario 6G: notAllowedLocalDerivedKey error/warning",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises notAllowedLocalDerivedKey error when did is incorrect",
              "fullTitle": "Test Scenario 6G: notAllowedLocalDerivedKey error/warning Raises notAllowedLocalDerivedKey error when did is incorrect",
              "timedOut": null,
              "duration": 5072,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"notAllowedLocalDerivedKey\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"notAllowedLocalDerivedKey\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:danubetech.com:did:test1\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:danubetech.com:did:test1\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43263/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:43263/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:43263/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:43263/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:43263/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:43263/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:410:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:408:27)",
                "diff": null
              },
              "uuid": "c99f3112-e178-4fb1-9db8-3c8a24662439",
              "parentUUID": "07916362-c0f9-41a2-beb9-4ef75fb703cd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c99f3112-e178-4fb1-9db8-3c8a24662439"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5072,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "01495735-7009-433e-b3d0-122501e9ef21",
          "title": "Test Scenario 6H: notAllowedLocalDuplicateKey error/warning",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises notAllowedLocalDuplicateKey error when did is incorrect",
              "fullTitle": "Test Scenario 6H: notAllowedLocalDuplicateKey error/warning Raises notAllowedLocalDuplicateKey error when did is incorrect",
              "timedOut": null,
              "duration": 133,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidDidDocumentId\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"notAllowedLocalDuplicateKey\");\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 'invalidDid' to include 'notAllowedLocalDuplicateKey'",
                "estack": "AssertionError: expected 'invalidDid' to include 'notAllowedLocalDuplicateKey'\n    at Context.eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:440:63)",
                "diff": null
              },
              "uuid": "82fe1dbc-314f-4d19-892b-49de2929cc10",
              "parentUUID": "01495735-7009-433e-b3d0-122501e9ef21",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "82fe1dbc-314f-4d19-892b-49de2929cc10"
          ],
          "pending": [],
          "skipped": [],
          "duration": 133,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "17a9d53a-1bc0-41a9-acc2-c44db01513e4",
          "title": "Test Scenario 6I: notAllowedKeyType error/warning",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises notAllowedKeyType error when did is incorrect",
              "fullTitle": "Test Scenario 6I: notAllowedKeyType error/warning Raises notAllowedKeyType error when did is incorrect",
              "timedOut": null,
              "duration": 5086,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidDidDocumentId\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"notAllowedKeyType\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/to_be_defined\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/to_be_defined\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43263/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:43263/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:43263/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:43263/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:43263/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:43263/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:454:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:452:27)",
                "diff": null
              },
              "uuid": "39458735-f3bf-4177-bbe2-23dbd43a2380",
              "parentUUID": "17a9d53a-1bc0-41a9-acc2-c44db01513e4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "39458735-f3bf-4177-bbe2-23dbd43a2380"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5086,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "06cf425e-1576-41e1-a0c4-c1afbd20926e",
          "title": "Test Scenario 6J: notAllowedMethod error/warning",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises notAllowedMethod error when did is incorrect",
              "fullTitle": "Test Scenario 6J: notAllowedMethod error/warning Raises notAllowedMethod error when did is incorrect",
              "timedOut": null,
              "duration": 5107,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"notAllowedMethod\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"notAllowedMethod\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:github:gjgd\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:github:gjgd\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43263/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:43263/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:43263/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:43263/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:43263/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:43263/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:477:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:475:27)",
                "diff": null
              },
              "uuid": "5117c604-c62d-4887-947e-4bb5e812f8a7",
              "parentUUID": "06cf425e-1576-41e1-a0c4-c1afbd20926e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5117c604-c62d-4887-947e-4bb5e812f8a7"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5107,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f3331547-b832-43d6-88ae-65dfdca6208e",
          "title": "Test Scenario 7: DID URLs with fragments",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Can resolve a DID with a fragment",
              "fullTitle": "Test Scenario 7: DID URLs with fragments Can resolve a DID with a fragment",
              "timedOut": null,
              "duration": 5102,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"fragmentDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const fragmentDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + fragmentDid,\n      failOnStatusCode: false,\n      headers: {\n        Accept: \"application/did+ld+json\",\n        Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n      }\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n      expect(response.body).not.to.have.property(\"didDocument\");\n      expect(response.body).to.have.property(\"id\");\n      expect(response.body[\"id\"]).to.contain(decodeURIComponent(fragmentDid.split(\"#\")[0]));\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did%3Asov%3AWRfXPg8dantKVubE3HX8pw%23key-1\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did%3Asov%3AWRfXPg8dantKVubE3HX8pw%23key-1\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43263/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:43263/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:43263/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:43263/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:43263/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:43263/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:499:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:497:27)",
                "diff": null
              },
              "uuid": "c8650d24-7016-4761-9ba3-1618c210d637",
              "parentUUID": "f3331547-b832-43d6-88ae-65dfdca6208e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c8650d24-7016-4761-9ba3-1618c210d637"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5102,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5624a8f3-8cc9-416a-9d4b-c68b89e00011",
          "title": "Test Scenario 8: Service and relativeRef parameters",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fetches DID",
              "fullTitle": "Test Scenario 8: Service and relativeRef parameters Fetches DID",
              "timedOut": null,
              "duration": 5083,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"relativeParamDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const fragmentDid = list[key];\n    console.log(\"FRAGMENT DID IS\", fragmentDid);\n    cy.request({\n      method: \"GET\",\n      url: endpoint + fragmentDid,\n      headers: {\n        Accept: \"text/uri-list\"\n      },\n      failOnStatusCode: false\n    }).as(\"response\");\n    it(\"MUST return HTTP response status equals 303\", () => {\n      cy.get(\"@response\").then(response => {\n        expect(response.status).to.eq(303);\n      });\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:danubetech.com?service=github&relativeRef=did-method-dns\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:danubetech.com?service=github&relativeRef=did-method-dns\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43263/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:43263/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:43263/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:43263/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:43263/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:43263/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:529:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:526:27)",
                "diff": null
              },
              "uuid": "7324c849-590b-46e6-88a9-9baad9be2368",
              "parentUUID": "5624a8f3-8cc9-416a-9d4b-c68b89e00011",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7324c849-590b-46e6-88a9-9baad9be2368"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5083,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "59d8ecad-4f0b-4b1a-82cd-af364582c088",
          "title": "Test Scenario 9: DID URLs with transformKeys",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 122,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"transformKeyDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const transformKeyDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + transformKeyDid,\n      headers: {\n        Accept: \"application/did+ld+json\",\n        Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response).to.be.a(\"object\");\n      response.body.verificationMethod.forEach(out => {\n        expect(out).has.property(\"type\").to.be.oneOf([\"JsonWebKey2020\", \"Ed25519VerificationKey2018\", \"X25519KeyAgreementKey2019\"]);\n      });\n      expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n      expect(response.body).has.property(\"id\", decodeURIComponent(transformKeyDid.split(\"?\")[0].split(\"#\")[0]));\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 400 to equal 200",
                "estack": "AssertionError: expected 400 to equal 200\n    at Context.eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:564:40)",
                "diff": "- 400\n+ 200\n"
              },
              "uuid": "e625fe19-4277-45e5-948d-c37a50f37f28",
              "parentUUID": "59d8ecad-4f0b-4b1a-82cd-af364582c088",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e625fe19-4277-45e5-948d-c37a50f37f28"
          ],
          "pending": [],
          "skipped": [],
          "duration": 122,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e97fb872-6449-4025-9eff-c1334479851a",
          "title": "Test Scenario 10: DID URLs with versionTime parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5082,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"versionTimeDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const versionTimeDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + versionTimeDid,\n      headers: {\n        Accept: \"application/did+ld+json\",\n        Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n      expect(response).to.be.a(\"object\");\n      expect(response.body).has.property(\"id\").contains(\"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43263/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:43263/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:43263/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:43263/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:43263/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:43263/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:584:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:582:27)",
                "diff": null
              },
              "uuid": "8d5ba98f-9c94-4f96-858e-a678c8e3200b",
              "parentUUID": "e97fb872-6449-4025-9eff-c1334479851a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8d5ba98f-9c94-4f96-858e-a678c8e3200b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5082,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b8d6fc21-7f07-42bf-aa6f-059ddc97df49",
          "title": "Test Scenario 11: DID URLs with versionId parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5119,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"versionIdDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const versionIdDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + versionIdDid,\n      headers: {\n        Accept: \"application/did+ld+json\",\n        Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n      expect(response.body).has.property(\"id\").contains(decodeURIComponent(versionIdDid.split(\"?\")[0]));\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43263/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:43263/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:43263/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:43263/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:43263/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:43263/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:611:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:609:27)",
                "diff": null
              },
              "uuid": "c23097b4-ed3e-40c8-b882-6e923241edf3",
              "parentUUID": "b8d6fc21-7f07-42bf-aa6f-059ddc97df49",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c23097b4-ed3e-40c8-b882-6e923241edf3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5119,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1c01b0ce-35b8-4f5c-8b5b-8e547c7a09b1",
          "title": "Test Scenario 12: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5089,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"application/json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      console.log(\"normal did is:\", normalDid);\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains(\"application/did+json;charset=utf-8\");\n      expect(response.body).has.property(\"id\", normalDid); // expect(response.body[\"keyAgreement\"][0]).to.contain(normalDid);\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43263/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:43263/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:43263/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:43263/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:43263/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:43263/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:638:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:636:27)",
                "diff": null
              },
              "uuid": "620cc175-f400-4b54-97a2-1af351d10f4f",
              "parentUUID": "1c01b0ce-35b8-4f5c-8b5b-8e547c7a09b1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "620cc175-f400-4b54-97a2-1af351d10f4f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5089,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d14ddb95-9a78-45ac-bab3-0a2e70d521e1",
          "title": "Test Scenario 12B: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5138,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: 'application/ld+json;profile=\"https://w3c-ccg.github.io/did-resolution/\"'\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      console.log(\"normal did is:\", normalDid);\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains('application/ld+json; profile=\"https://w3c-ccg.github.io/did-resolution/\"');\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:43263/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:43263/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43263/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:43263/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:43263/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:43263/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:43263/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:43263/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:43263/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:665:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:43263/__cypress/tests?p=cypress/integration/uniresolver_spec.js:663:27)",
                "diff": null
              },
              "uuid": "39e39f77-4079-4088-af01-d419a5a012d4",
              "parentUUID": "d14ddb95-9a78-45ac-bab3-0a2e70d521e1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "39e39f77-4079-4088-af01-d419a5a012d4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5138,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.2"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mocha",
        "configFile": "reporterOpts.json",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.1.1"
    }
  }
}