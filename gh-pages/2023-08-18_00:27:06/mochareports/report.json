{
  "stats": {
    "suites": 1,
    "tests": 22,
    "passes": 0,
    "pending": 0,
    "failures": 22,
    "start": "2023-08-18T00:25:08.145Z",
    "end": "2023-08-18T00:27:00.618Z",
    "duration": 112095,
    "testsRegistered": 22,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d17ce4f4-cae8-4abe-ab0b-106fac7f5729",
      "title": "",
      "fullFile": "cypress/integration/uniresolver_spec.js",
      "file": "cypress/integration/uniresolver_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3f81d2be-5462-41a6-8445-e0ee02523b34",
          "title": "Test Scenario 1: DID Resolution Result fixtures: https://dev.uniresolver.io/1.0/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved",
              "fullTitle": "Test Scenario 1: DID Resolution Result fixtures: https://dev.uniresolver.io/1.0/identifiers/ A correct DID can be resolved",
              "timedOut": null,
              "duration": 5129,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.clearCookies();\ncy.fixture(path_example_dids).its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.headers[\"content-type\"].replace(/\\s+/g, \"\")).contains('application/ld+json;profile=\"https://w3id.org/did-resolution');\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response).to.be.a(\"object\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocument\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didResolutionMetadata\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocumentMetadata\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body.didDocument.id).to.be.a(\"string\").and.satisfy(msg => msg.startsWith(\"did:\"));\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33927/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33927/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33927/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33927/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33927/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33927/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:110:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:108:27)",
                "diff": null
              },
              "uuid": "3dd3c316-d4dd-43ba-8066-c39716cfda32",
              "parentUUID": "3f81d2be-5462-41a6-8445-e0ee02523b34",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "3dd3c316-d4dd-43ba-8066-c39716cfda32"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5129,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4f37b7ed-8726-46e5-853c-eb62239cf3e1",
          "title": "Test Scenario 2: JSON-LD DID document",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved with header input",
              "fullTitle": "Test Scenario 2: JSON-LD DID document A correct DID can be resolved with header input",
              "timedOut": null,
              "duration": 5118,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"application/did+ld+json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n      cy.get(\"@request\").then(response => {\n        expect(response).to.be.a(\"object\");\n      });\n      expect(response.body).not.to.have.property(\"didDocument\");\n      expect(response.body[\"id\"]).to.contain(normalDid);\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33927/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33927/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33927/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33927/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33927/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33927/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:148:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:146:27)",
                "diff": null
              },
              "uuid": "c34649dc-3f25-4d29-a4dc-7c4cbdad7ff4",
              "parentUUID": "4f37b7ed-8726-46e5-853c-eb62239cf3e1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c34649dc-3f25-4d29-a4dc-7c4cbdad7ff4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5118,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "aabaa76a-c545-4bff-b0f1-053aa8a71996",
          "title": "Test Scenario 3: Representation not supported",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Shows an error when a representation is prompted",
              "fullTitle": "Test Scenario 3: Representation not supported Shows an error when a representation is prompted",
              "timedOut": null,
              "duration": 5070,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"image/png\"\n      },\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(406);\n      console.log(response);\n      expect(response.body.dereferencingMetadata.error).to.eq('\"representationNotSupported\"');\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33927/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33927/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33927/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33927/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33927/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33927/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:203:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:201:27)",
                "diff": null
              },
              "uuid": "eeff47bb-808d-4e26-accb-6717dfc67624",
              "parentUUID": "aabaa76a-c545-4bff-b0f1-053aa8a71996",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "eeff47bb-808d-4e26-accb-6717dfc67624"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5070,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e82c4027-9476-46f1-9735-c918ace4c01f",
          "title": "Test Scenario 4: Deactivated",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns an HTTP code of 410 for deactivated DIDs",
              "fullTitle": "Test Scenario 4: Deactivated Returns an HTTP code of 410 for deactivated DIDs",
              "timedOut": null,
              "duration": 5077,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"deacDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const deacDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + deacDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(410);\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.body.didDocumentMetadata.deactivated).to.eq(true);\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:indicio:test:16vv8izCToK4svjYjvsp4r\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:indicio:test:16vv8izCToK4svjYjvsp4r\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33927/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33927/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33927/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33927/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33927/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33927/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:227:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:225:27)",
                "diff": null
              },
              "uuid": "978bd206-7cd2-4039-8d57-efd160409193",
              "parentUUID": "e82c4027-9476-46f1-9735-c918ace4c01f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "978bd206-7cd2-4039-8d57-efd160409193"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5077,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c12a2e97-4a13-4787-bb23-49d5c5e59217",
          "title": "Test Scenario 5: Not found",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns an HTTP code of 404 for non-existent DIDs",
              "fullTitle": "Test Scenario 5: Not found Returns an HTTP code of 404 for non-existent DIDs",
              "timedOut": null,
              "duration": 5077,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"nonExisDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const nonExDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + nonExDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(404);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response).to.be.a(\"object\");\n      expect(response.body.didResolutionMetadata.error).to.eq(\"notFound\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:0000000000000000000000\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:0000000000000000000000\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33927/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33927/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33927/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33927/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33927/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33927/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:249:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:247:27)",
                "diff": null
              },
              "uuid": "a7285d84-5c03-462f-bc76-2506f021ede2",
              "parentUUID": "c12a2e97-4a13-4787-bb23-49d5c5e59217",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a7285d84-5c03-462f-bc76-2506f021ede2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5077,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2ad85ac3-ce76-4fde-b951-f343e2519192",
          "title": "Test Scenario 6A: Invalid DID",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns a HTTP code of 400 for an invalid DID",
              "fullTitle": "Test Scenario 6A: Invalid DID Returns a HTTP code of 400 for an invalid DID",
              "timedOut": null,
              "duration": 5098,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(400);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response).to.be.a(\"object\");\n      expect(response.body.didResolutionMetadata.error).contains(\"invalidDid\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:example_222\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:example_222\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33927/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33927/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33927/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33927/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33927/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33927/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:271:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:269:27)",
                "diff": null
              },
              "uuid": "c16fea00-51ac-47af-8007-96af2784aca3",
              "parentUUID": "2ad85ac3-ce76-4fde-b951-f343e2519192",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c16fea00-51ac-47af-8007-96af2784aca3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5098,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9fd741e6-0261-451d-a147-0584a87da66e",
          "title": "Test Scenario 6B: method not supported DIDs",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises an error for unsupported DID methods",
              "fullTitle": "Test Scenario 6B: method not supported DIDs Raises an error for unsupported DID methods",
              "timedOut": null,
              "duration": 5093,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"methodNotSupportedDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.body.didResolutionMetadata.error).contains(\"methodNotSupported\");\n      expect(response).to.be.a(\"object\"); // todo: should this be 404 or 400?\n      expect(response.status).to.eq(400); // returns 501\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:xyz:12345\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:xyz:12345\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33927/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33927/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33927/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33927/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33927/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33927/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:293:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:291:27)",
                "diff": null
              },
              "uuid": "544c2afa-43a1-468a-b648-4dcae7e63d3d",
              "parentUUID": "9fd741e6-0261-451d-a147-0584a87da66e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "544c2afa-43a1-468a-b648-4dcae7e63d3d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5093,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2afcf92f-ebf6-4ae4-88a1-1903be57be27",
          "title": "Test Scenario 6C: invalid verificationMethod.id",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises error when verificationMethod.id is invalid",
              "fullTitle": "Test Scenario 6C: invalid verificationMethod.id Raises error when verificationMethod.id is invalid",
              "timedOut": null,
              "duration": 5089,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidVerificationMethodId\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"'); // todo: should this be 404 or 400?\n      expect(response.status).to.eq(400); // return 200\n      expect(response.body.didResolutionMetadata.error).contains(\"invalidDidUrl\"); // doesn't exist\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:did-web.godiddy.com:ad58e1ad-09e9-4873-83c7-42e11809b54b\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:did-web.godiddy.com:ad58e1ad-09e9-4873-83c7-42e11809b54b\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33927/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33927/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33927/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33927/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33927/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33927/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:318:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:316:27)",
                "diff": null
              },
              "uuid": "8f6342af-50f3-4a71-92e4-25a516039744",
              "parentUUID": "2afcf92f-ebf6-4ae4-88a1-1903be57be27",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8f6342af-50f3-4a71-92e4-25a516039744"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5089,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6b13c1e3-fb6d-457c-af50-1f70281d62f4",
          "title": "Test Scenario 6D: invalid verificationMethod.controller",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises error when verificationMethod.controller is invalid",
              "fullTitle": "Test Scenario 6D: invalid verificationMethod.controller Raises error when verificationMethod.controller is invalid",
              "timedOut": null,
              "duration": 5101,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidVerificationMethodController\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"'); // todo: should this be 404 or 400?\n      expect(response.status).to.eq(400); // returns 200\n      expect(response.body.didResolutionMetadata.error).contains(\"invalidDid\"); // doesn't exist\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:did-web.godiddy.com:ad58e1ad-09e9-4873-83c7-42e11809b54b\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:did-web.godiddy.com:ad58e1ad-09e9-4873-83c7-42e11809b54b\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33927/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33927/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33927/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33927/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33927/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33927/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:342:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:340:27)",
                "diff": null
              },
              "uuid": "f3a463e2-fe40-4537-bc01-c092eacee521",
              "parentUUID": "6b13c1e3-fb6d-457c-af50-1f70281d62f4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f3a463e2-fe40-4537-bc01-c092eacee521"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5101,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5c46c69c-33d7-4dff-8bbb-118e41e66601",
          "title": "Test Scenario 6E: invalid didDocument.id",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises error when didDocument.id is invalid",
              "fullTitle": "Test Scenario 6E: invalid didDocument.id Raises error when didDocument.id is invalid",
              "timedOut": null,
              "duration": 5088,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidDidDocumentId\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"invalidDid\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/to_be_defined\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/to_be_defined\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33927/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33927/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33927/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33927/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33927/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33927/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:366:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:364:27)",
                "diff": null
              },
              "uuid": "5e9a5b4b-f6e0-45ea-b48d-2d27b8f6d0a6",
              "parentUUID": "5c46c69c-33d7-4dff-8bbb-118e41e66601",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5e9a5b4b-f6e0-45ea-b48d-2d27b8f6d0a6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5088,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f38bdedb-ee3e-42e0-8a76-0d41455fb01c",
          "title": "Test Scenario 6F: Invalid didDocument scheme",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises invalidDid error when if scheme is not did",
              "fullTitle": "Test Scenario 6F: Invalid didDocument scheme Raises invalidDid error when if scheme is not did",
              "timedOut": null,
              "duration": 5084,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidDidScheme\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"invalidDid\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/urn:uuid:c0bbe99d-2071-4fd3-a87e-6b710b369108\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/urn:uuid:c0bbe99d-2071-4fd3-a87e-6b710b369108\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33927/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33927/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33927/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33927/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33927/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33927/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:388:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:386:27)",
                "diff": null
              },
              "uuid": "d19e6131-8815-4166-aee0-53ba1ae53e52",
              "parentUUID": "f38bdedb-ee3e-42e0-8a76-0d41455fb01c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d19e6131-8815-4166-aee0-53ba1ae53e52"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5084,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d17f5799-9ad3-4e39-9e5b-d827b872951a",
          "title": "Test Scenario 6G: notAllowedLocalDerivedKey error/warning",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises notAllowedLocalDerivedKey error when did is incorrect",
              "fullTitle": "Test Scenario 6G: notAllowedLocalDerivedKey error/warning Raises notAllowedLocalDerivedKey error when did is incorrect",
              "timedOut": null,
              "duration": 5100,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"notAllowedLocalDerivedKey\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"notAllowedLocalDerivedKey\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:danubetech.com:did:test1\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:danubetech.com:did:test1\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33927/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33927/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33927/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33927/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33927/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33927/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:410:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:408:27)",
                "diff": null
              },
              "uuid": "8f4a993e-cf7c-44c0-b62a-9e4c72f0d6da",
              "parentUUID": "d17f5799-9ad3-4e39-9e5b-d827b872951a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8f4a993e-cf7c-44c0-b62a-9e4c72f0d6da"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5100,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cc4af185-96ca-40b9-aa83-0972774f6b35",
          "title": "Test Scenario 6H: notAllowedLocalDuplicateKey error/warning",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises notAllowedLocalDuplicateKey error when did is incorrect",
              "fullTitle": "Test Scenario 6H: notAllowedLocalDuplicateKey error/warning Raises notAllowedLocalDuplicateKey error when did is incorrect",
              "timedOut": null,
              "duration": 5054,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidDidDocumentId\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"notAllowedLocalDuplicateKey\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/to_be_defined\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/to_be_defined\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33927/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33927/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33927/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33927/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33927/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33927/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:432:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:430:27)",
                "diff": null
              },
              "uuid": "72d8bf03-2889-473d-b9ef-d9f9a408a6f8",
              "parentUUID": "cc4af185-96ca-40b9-aa83-0972774f6b35",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "72d8bf03-2889-473d-b9ef-d9f9a408a6f8"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5054,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0b79030d-9b08-4cf8-ad98-a4feed6607d5",
          "title": "Test Scenario 6I: notAllowedKeyType error/warning",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises notAllowedKeyType error when did is incorrect",
              "fullTitle": "Test Scenario 6I: notAllowedKeyType error/warning Raises notAllowedKeyType error when did is incorrect",
              "timedOut": null,
              "duration": 5090,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidDidDocumentId\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"notAllowedKeyType\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/to_be_defined\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/to_be_defined\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33927/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33927/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33927/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33927/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33927/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33927/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:454:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:452:27)",
                "diff": null
              },
              "uuid": "9bff0043-aa9d-4a1b-9d7d-7dfcdcb98f70",
              "parentUUID": "0b79030d-9b08-4cf8-ad98-a4feed6607d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9bff0043-aa9d-4a1b-9d7d-7dfcdcb98f70"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5090,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "12c5f897-5a47-4ef8-8e67-6d0199f84df9",
          "title": "Test Scenario 6J: notAllowedMethod error/warning",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises notAllowedMethod error when did is incorrect",
              "fullTitle": "Test Scenario 6J: notAllowedMethod error/warning Raises notAllowedMethod error when did is incorrect",
              "timedOut": null,
              "duration": 5108,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"notAllowedMethod\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"notAllowedMethod\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:github:gjgd\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:github:gjgd\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33927/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33927/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33927/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33927/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33927/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33927/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:477:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:475:27)",
                "diff": null
              },
              "uuid": "f797fae6-b12b-4b38-a273-11ccd5ff705c",
              "parentUUID": "12c5f897-5a47-4ef8-8e67-6d0199f84df9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f797fae6-b12b-4b38-a273-11ccd5ff705c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5108,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a87fc160-389c-430f-887a-6f03e5cbc46b",
          "title": "Test Scenario 7: DID URLs with fragments",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Can resolve a DID with a fragment",
              "fullTitle": "Test Scenario 7: DID URLs with fragments Can resolve a DID with a fragment",
              "timedOut": null,
              "duration": 5091,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"fragmentDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const fragmentDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + fragmentDid,\n      failOnStatusCode: false,\n      headers: {\n        Accept: \"application/did+ld+json\",\n        Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n      }\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n      expect(response.body).not.to.have.property(\"didDocument\");\n      expect(response.body).to.have.property(\"id\");\n      expect(response.body[\"id\"]).to.contain(decodeURIComponent(fragmentDid.split(\"#\")[0]));\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did%3Asov%3AWRfXPg8dantKVubE3HX8pw%23key-1\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did%3Asov%3AWRfXPg8dantKVubE3HX8pw%23key-1\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33927/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33927/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33927/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33927/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33927/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33927/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:499:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:497:27)",
                "diff": null
              },
              "uuid": "f7f0c20f-af2d-4920-a3d5-9aa9ca49afd4",
              "parentUUID": "a87fc160-389c-430f-887a-6f03e5cbc46b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f7f0c20f-af2d-4920-a3d5-9aa9ca49afd4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5091,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2dc30c31-15d8-4b77-a978-d5d397dba5ad",
          "title": "Test Scenario 8: Service and relativeRef parameters",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fetches DID",
              "fullTitle": "Test Scenario 8: Service and relativeRef parameters Fetches DID",
              "timedOut": null,
              "duration": 5090,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"relativeParamDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const fragmentDid = list[key];\n    console.log(\"FRAGMENT DID IS\", fragmentDid);\n    cy.request({\n      method: \"GET\",\n      url: endpoint + fragmentDid,\n      headers: {\n        Accept: \"text/uri-list\"\n      },\n      failOnStatusCode: false\n    }).as(\"response\");\n    it(\"MUST return HTTP response status equals 303\", () => {\n      cy.get(\"@response\").then(response => {\n        expect(response.status).to.eq(303);\n      });\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:danubetech.com?service=github&relativeRef=did-method-dns\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:danubetech.com?service=github&relativeRef=did-method-dns\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33927/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33927/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33927/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33927/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33927/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33927/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:529:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:526:27)",
                "diff": null
              },
              "uuid": "f0202066-838c-4c76-a0c5-a4c44043efbc",
              "parentUUID": "2dc30c31-15d8-4b77-a978-d5d397dba5ad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f0202066-838c-4c76-a0c5-a4c44043efbc"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5090,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ae8d1a48-b511-415c-a141-890fe9334653",
          "title": "Test Scenario 9: DID URLs with transformKeys",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5100,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"transformKeyDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const transformKeyDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + transformKeyDid,\n      headers: {\n        Accept: \"application/did+ld+json\",\n        Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response).to.be.a(\"object\");\n      response.body.verificationMethod.forEach(out => {\n        expect(out).has.property(\"type\").to.be.oneOf([\"JsonWebKey2020\", \"Ed25519VerificationKey2018\", \"X25519KeyAgreementKey2019\"]);\n      });\n      expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n      expect(response.body).has.property(\"id\", decodeURIComponent(transformKeyDid.split(\"?\")[0].split(\"#\")[0]));\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33927/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33927/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33927/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33927/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33927/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33927/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:554:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:552:27)",
                "diff": null
              },
              "uuid": "fd5e984c-bee5-4533-aaaa-545e3b1a1722",
              "parentUUID": "ae8d1a48-b511-415c-a141-890fe9334653",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "fd5e984c-bee5-4533-aaaa-545e3b1a1722"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5100,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "31448f6b-b85e-4560-a078-c03eafff7237",
          "title": "Test Scenario 10: DID URLs with versionTime parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5096,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"versionTimeDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const versionTimeDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + versionTimeDid,\n      headers: {\n        Accept: \"application/did+ld+json\",\n        Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n      expect(response).to.be.a(\"object\");\n      expect(response.body).has.property(\"id\").contains(\"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33927/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33927/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33927/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33927/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33927/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33927/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:584:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:582:27)",
                "diff": null
              },
              "uuid": "504d5462-83d7-4606-80c9-3e2f0f3c887a",
              "parentUUID": "31448f6b-b85e-4560-a078-c03eafff7237",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "504d5462-83d7-4606-80c9-3e2f0f3c887a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5096,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "488cfb67-655b-47e6-9127-126f39da2c73",
          "title": "Test Scenario 11: DID URLs with versionId parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5116,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"versionIdDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const versionIdDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + versionIdDid,\n      headers: {\n        Accept: \"application/did+ld+json\",\n        Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n      expect(response.body).has.property(\"id\").contains(decodeURIComponent(versionIdDid.split(\"?\")[0]));\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33927/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33927/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33927/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33927/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33927/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33927/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:611:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:609:27)",
                "diff": null
              },
              "uuid": "dcad6029-b125-43f7-9da0-346cccfe8cba",
              "parentUUID": "488cfb67-655b-47e6-9127-126f39da2c73",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "dcad6029-b125-43f7-9da0-346cccfe8cba"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5116,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d832e3cb-6e3e-4b1e-ae5c-8adfd7331f35",
          "title": "Test Scenario 12: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5104,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"application/json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      console.log(\"normal did is:\", normalDid);\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains(\"application/did+json;charset=utf-8\");\n      expect(response.body).has.property(\"id\", normalDid); // expect(response.body[\"keyAgreement\"][0]).to.contain(normalDid);\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33927/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33927/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33927/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33927/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33927/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33927/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:638:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:636:27)",
                "diff": null
              },
              "uuid": "c3ac5f9c-626e-4244-8f7c-f7a8fbbfe4f5",
              "parentUUID": "d832e3cb-6e3e-4b1e-ae5c-8adfd7331f35",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c3ac5f9c-626e-4244-8f7c-f7a8fbbfe4f5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5104,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7469ec89-1b62-432e-a4b5-f929eaf0f732",
          "title": "Test Scenario 12B: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5122,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: 'application/ld+json;profile=\"https://w3c-ccg.github.io/did-resolution/\"'\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      console.log(\"normal did is:\", normalDid);\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains('application/ld+json; profile=\"https://w3c-ccg.github.io/did-resolution/\"');\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:33927/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:33927/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33927/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:33927/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:33927/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:33927/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:33927/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:33927/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:33927/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:665:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:33927/__cypress/tests?p=cypress/integration/uniresolver_spec.js:663:27)",
                "diff": null
              },
              "uuid": "1f84b9cf-048e-43a8-a0a7-09a911265ee5",
              "parentUUID": "7469ec89-1b62-432e-a4b5-f929eaf0f732",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "1f84b9cf-048e-43a8-a0a7-09a911265ee5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5122,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.2"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mocha",
        "configFile": "reporterOpts.json",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.1.1"
    }
  }
}