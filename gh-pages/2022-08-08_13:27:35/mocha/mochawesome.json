{
  "stats": {
    "suites": 12,
    "tests": 35,
    "passes": 18,
    "pending": 0,
    "failures": 17,
    "start": "2022-08-08T13:27:17.754Z",
    "end": "2022-08-08T13:27:26.553Z",
    "duration": 8799,
    "testsRegistered": 44,
    "passPercent": 40.909090909090914,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 9,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "25eed808-60a5-46e5-9248-c6d5304608f5",
      "title": "",
      "fullFile": "cypress/integration/resolver_spec.js",
      "file": "cypress/integration/resolver_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "84ffe4f5-d5b8-439b-94ce-3caee7182017",
          "title": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 200",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ MUST return HTTP code 200",
              "timedOut": null,
              "duration": 963,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttps://resolver.svip.danubetech.com/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw\n\nThe response we received from your web server was:\n\n  > 401: Unauthorized\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/9.5.1 Chrome/94.0.4606.81 Electron/15.3.4 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\"\n}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 401 - Unauthorized\nHeaders: {\n  \"date\": \"Mon, 08 Aug 2022 13:27:18 GMT\",\n  \"content-type\": \"application/ld+json;profile=\\\"https://w3id.org/did-resolution\\\";charset=utf-8\",\n  \"transfer-encoding\": \"chunked\",\n  \"connection\": \"keep-alive\",\n  \"access-control-allow-origin\": \"*\",\n  \"strict-transport-security\": \"max-age=15724800; includeSubDomains\"\n}\nBody: {\n  \"@context\": \"https://w3id.org/did-resolution/v1\",\n  \"didDocument\": null,\n  \"didResolutionMetadata\": {\n    \"error\": \"unauthorized\",\n    \"errorMessage\": \"Error unauthorized from resolver: Missing access token.\",\n    \"_http_code\": 401,\n    \"contentType\": \"application/did+ld+json\"\n  },\n  \"didDocumentMetadata\": {}\n}\n\n\nhttps://on.cypress.io/request\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Test Scenario 1: DID Resolu...`",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttps://resolver.svip.danubetech.com/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw\n\nThe response we received from your web server was:\n\n  > 401: Unauthorized\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/9.5.1 Chrome/94.0.4606.81 Electron/15.3.4 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\"\n}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 401 - Unauthorized\nHeaders: {\n  \"date\": \"Mon, 08 Aug 2022 13:27:18 GMT\",\n  \"content-type\": \"application/ld+json;profile=\\\"https://w3id.org/did-resolution\\\";charset=utf-8\",\n  \"transfer-encoding\": \"chunked\",\n  \"connection\": \"keep-alive\",\n  \"access-control-allow-origin\": \"*\",\n  \"strict-transport-security\": \"max-age=15724800; includeSubDomains\"\n}\nBody: {\n  \"@context\": \"https://w3id.org/did-resolution/v1\",\n  \"didDocument\": null,\n  \"didResolutionMetadata\": {\n    \"error\": \"unauthorized\",\n    \"errorMessage\": \"Error unauthorized from resolver: Missing access token.\",\n    \"_http_code\": 401,\n    \"contentType\": \"application/did+ld+json\"\n  },\n  \"didDocumentMetadata\": {}\n}\n\n\nhttps://on.cypress.io/request\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Test Scenario 1: DID Resolu...`\n    at http://localhost:46529/__cypress/runner/cypress_runner.js:160634:80\n    at tryCatcher (http://localhost:46529/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46529/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46529/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46529/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46529/__cypress/runner/cypress_runner.js:11139:18)\n    at _drainQueueStep (http://localhost:46529/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46529/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46529/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46529/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:46529/__cypress/tests?p=cypress/integration/resolver_spec.js:104:10)",
                "diff": null
              },
              "uuid": "557f3e90-86e2-46ad-8de2-cfdbc7acc4fb",
              "parentUUID": "84ffe4f5-d5b8-439b-94ce-3caee7182017",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ MUST return a JSON object",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "dc643dd1-b293-4f9b-b1c1-b0ae65d2c843",
              "parentUUID": "84ffe4f5-d5b8-439b-94ce-3caee7182017",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Should have header with Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\" ",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ Should have header with Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\" ",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.headers[\"content-type\"].replace(/\\s+/g, \"\")).contains('application/ld+json;profile=\"https://w3id.org/did-resolution');\n});",
              "err": {},
              "uuid": "21c6a736-8a45-4b6e-a240-4b8ba612f2e2",
              "parentUUID": "84ffe4f5-d5b8-439b-94ce-3caee7182017",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Must contain property didDocument",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ Must contain property didDocument",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "9f2e1a98-2aa1-4bd9-b46e-abbbdf985570",
              "parentUUID": "84ffe4f5-d5b8-439b-94ce-3caee7182017",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Must contain property didResolutionMetadata",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ Must contain property didResolutionMetadata",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didResolutionMetadata\");\n});",
              "err": {},
              "uuid": "3e0f399b-5afd-4715-a947-68df4fe3f0a7",
              "parentUUID": "84ffe4f5-d5b8-439b-94ce-3caee7182017",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Must contain property didDocumentMetadata",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ Must contain property didDocumentMetadata",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didDocumentMetadata\");\n});",
              "err": {},
              "uuid": "b994f036-3e10-4d41-8da3-7dbbaf55085a",
              "parentUUID": "84ffe4f5-d5b8-439b-94ce-3caee7182017",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "557f3e90-86e2-46ad-8de2-cfdbc7acc4fb"
          ],
          "pending": [],
          "skipped": [
            "dc643dd1-b293-4f9b-b1c1-b0ae65d2c843",
            "21c6a736-8a45-4b6e-a240-4b8ba612f2e2",
            "9f2e1a98-2aa1-4bd9-b46e-abbbdf985570",
            "3e0f399b-5afd-4715-a947-68df4fe3f0a7",
            "b994f036-3e10-4d41-8da3-7dbbaf55085a"
          ],
          "duration": 963,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "99d23329-73f1-47e7-b8db-73644aad015c",
          "title": "Test Scenario 2: JSON-LD DID document",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should have response status 200",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have response status 200",
              "timedOut": null,
              "duration": 218,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttps://resolver.svip.danubetech.com/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw\n\nThe response we received from your web server was:\n\n  > 401: Unauthorized\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/9.5.1 Chrome/94.0.4606.81 Electron/15.3.4 Safari/537.36\",\n  \"accept\": \"application/did+ld+json\",\n  \"accept-encoding\": \"gzip, deflate\"\n}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 401 - Unauthorized\nHeaders: {\n  \"date\": \"Mon, 08 Aug 2022 13:27:18 GMT\",\n  \"content-type\": \"application/did+ld+json;charset=utf-8\",\n  \"transfer-encoding\": \"chunked\",\n  \"connection\": \"keep-alive\",\n  \"access-control-allow-origin\": \"*\",\n  \"strict-transport-security\": \"max-age=15724800; includeSubDomains\"\n}\nBody: \n\n\nhttps://on.cypress.io/request\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Test Scenario 2: JSON-LD DI...`",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttps://resolver.svip.danubetech.com/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw\n\nThe response we received from your web server was:\n\n  > 401: Unauthorized\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/9.5.1 Chrome/94.0.4606.81 Electron/15.3.4 Safari/537.36\",\n  \"accept\": \"application/did+ld+json\",\n  \"accept-encoding\": \"gzip, deflate\"\n}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 401 - Unauthorized\nHeaders: {\n  \"date\": \"Mon, 08 Aug 2022 13:27:18 GMT\",\n  \"content-type\": \"application/did+ld+json;charset=utf-8\",\n  \"transfer-encoding\": \"chunked\",\n  \"connection\": \"keep-alive\",\n  \"access-control-allow-origin\": \"*\",\n  \"strict-transport-security\": \"max-age=15724800; includeSubDomains\"\n}\nBody: \n\n\nhttps://on.cypress.io/request\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Test Scenario 2: JSON-LD DI...`\n    at http://localhost:46529/__cypress/runner/cypress_runner.js:160634:80\n    at tryCatcher (http://localhost:46529/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46529/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46529/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46529/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46529/__cypress/runner/cypress_runner.js:11139:18)\n    at _drainQueueStep (http://localhost:46529/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46529/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46529/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46529/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:46529/__cypress/tests?p=cypress/integration/resolver_spec.js:145:10)",
                "diff": null
              },
              "uuid": "810f7356-e9d1-4faa-9a61-55eef11b6cea",
              "parentUUID": "99d23329-73f1-47e7-b8db-73644aad015c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 2: JSON-LD DID document MUST return a JSON object",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "67014a81-961a-4dfa-9a2e-8ebb03b62ee3",
              "parentUUID": "99d23329-73f1-47e7-b8db-73644aad015c",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Should have header with content type",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have header with content type",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "1a6d8d14-1d5d-4b4f-be44-dd123be64c28",
              "parentUUID": "99d23329-73f1-47e7-b8db-73644aad015c",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Should not have property didDocument",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should not have property didDocument",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).not.to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "34e646b0-7185-42be-90da-ddd547336a6d",
              "parentUUID": "99d23329-73f1-47e7-b8db-73644aad015c",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Should have property @context",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have property @context",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {},
              "uuid": "e602f926-ed65-47f5-bd98-43e14705ce28",
              "parentUUID": "99d23329-73f1-47e7-b8db-73644aad015c",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "810f7356-e9d1-4faa-9a61-55eef11b6cea"
          ],
          "pending": [],
          "skipped": [
            "67014a81-961a-4dfa-9a2e-8ebb03b62ee3",
            "1a6d8d14-1d5d-4b4f-be44-dd123be64c28",
            "34e646b0-7185-42be-90da-ddd547336a6d",
            "e602f926-ed65-47f5-bd98-43e14705ce28"
          ],
          "duration": 218,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ef6de56f-7b48-497e-ad53-1543ad717cea",
          "title": "Test Scenario 2b: CBOR DID document: https://resolver.svip.danubetech.com/1.0/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 2b: CBOR DID document: https://resolver.svip.danubetech.com/1.0/identifiers/ MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 213,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw\",\n  headers: {\n    Accept: \"application/did+cbor\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "AssertionError: expected 401 to equal 200",
                "estack": "AssertionError: expected 401 to equal 200\n    at Context.eval (http://localhost:46529/__cypress/tests?p=cypress/integration/resolver_spec.js:192:36)",
                "diff": "- 401\n+ 200\n"
              },
              "uuid": "4c723dcc-fa73-4872-af38-9991e112e6c4",
              "parentUUID": "ef6de56f-7b48-497e-ad53-1543ad717cea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "4c723dcc-fa73-4872-af38-9991e112e6c4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 213,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c4cd2760-a384-4c4a-b941-464e6026231d",
          "title": "Test Scenario 3: Representation not supported",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 406",
              "fullTitle": "Test Scenario 3: Representation not supported MUST return HTTP code 406",
              "timedOut": null,
              "duration": 216,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw\",\n  failOnStatusCode: false,\n  headers: {\n    Accept: \"image/png\"\n  }\n}).then(response => {\n  expect(response.status).to.eq(406);\n});",
              "err": {},
              "uuid": "d278ad34-4715-46c2-a96b-2d1237245c0e",
              "parentUUID": "c4cd2760-a384-4c4a-b941-464e6026231d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d278ad34-4715-46c2-a96b-2d1237245c0e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 216,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4d4378d7-5b10-4a26-9266-4acccfdf9d57",
          "title": "Test Scenario 4: Deactivated",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 410",
              "fullTitle": "Test Scenario 4: Deactivated MUST return HTTP code 410",
              "timedOut": null,
              "duration": 186,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(410);\n});",
              "err": {
                "message": "AssertionError: expected 401 to equal 410",
                "estack": "AssertionError: expected 401 to equal 410\n    at Context.eval (http://localhost:46529/__cypress/tests?p=cypress/integration/resolver_spec.js:225:36)",
                "diff": "- 401\n+ 410\n"
              },
              "uuid": "13b89658-80d4-4963-b597-7dde40795da8",
              "parentUUID": "4d4378d7-5b10-4a26-9266-4acccfdf9d57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 4: Deactivated MUST return a JSON object",
              "timedOut": null,
              "duration": 216,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "37590aa2-051d-4441-99a1-5aadc16cb631",
              "parentUUID": "4d4378d7-5b10-4a26-9266-4acccfdf9d57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type",
              "fullTitle": "Test Scenario 4: Deactivated MUST return HTTP header Content-Type",
              "timedOut": null,
              "duration": 184,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "b1d2855e-1a7f-4c8f-a9b2-4269a473ae55",
              "parentUUID": "4d4378d7-5b10-4a26-9266-4acccfdf9d57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didDocumentMetadata.deactivated = true",
              "fullTitle": "Test Scenario 4: Deactivated JSON object MUST contain property didDocumentMetadata.deactivated = true",
              "timedOut": null,
              "duration": 185,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didDocumentMetadata.deactivated).to.eq(true);\n});",
              "err": {
                "message": "AssertionError: expected undefined to equal true",
                "estack": "AssertionError: expected undefined to equal true\n    at Context.eval (http://localhost:46529/__cypress/tests?p=cypress/integration/resolver_spec.js:253:66)",
                "diff": null
              },
              "uuid": "002fdcb1-4d5b-4eba-810e-f36f2bc399ad",
              "parentUUID": "4d4378d7-5b10-4a26-9266-4acccfdf9d57",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "37590aa2-051d-4441-99a1-5aadc16cb631",
            "b1d2855e-1a7f-4c8f-a9b2-4269a473ae55"
          ],
          "failures": [
            "13b89658-80d4-4963-b597-7dde40795da8",
            "002fdcb1-4d5b-4eba-810e-f36f2bc399ad"
          ],
          "pending": [],
          "skipped": [],
          "duration": 771,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b69e7b47-6b8c-49a1-b444-552ca0bdff59",
          "title": "Test Scenario 5: Not found",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 404",
              "fullTitle": "Test Scenario 5: Not found MUST return HTTP code 404",
              "timedOut": null,
              "duration": 215,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(404);\n});",
              "err": {
                "message": "AssertionError: expected 401 to equal 404",
                "estack": "AssertionError: expected 401 to equal 404\n    at Context.eval (http://localhost:46529/__cypress/tests?p=cypress/integration/resolver_spec.js:267:36)",
                "diff": "- 401\n+ 404\n"
              },
              "uuid": "2dd5499b-44ee-45dd-92ae-d395679f25b7",
              "parentUUID": "b69e7b47-6b8c-49a1-b444-552ca0bdff59",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "fullTitle": "Test Scenario 5: Not found MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "timedOut": null,
              "duration": 211,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "199fc82c-0d5c-4f9b-bc03-22af57ab409b",
              "parentUUID": "b69e7b47-6b8c-49a1-b444-552ca0bdff59",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 5: Not found MUST return a JSON object",
              "timedOut": null,
              "duration": 184,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "438e5757-cb87-4091-ab25-69dae5e00228",
              "parentUUID": "b69e7b47-6b8c-49a1-b444-552ca0bdff59",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didResolutionMetadata.error = \"notFound\"",
              "fullTitle": "Test Scenario 5: Not found JSON object MUST contain property didResolutionMetadata.error = \"notFound\"",
              "timedOut": null,
              "duration": 380,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://dev.uniresolver.io/1.0/identifiers/did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didResolutionMetadata.error).to.eq(\"notFound\");\n});",
              "err": {},
              "uuid": "7f746213-569e-4010-9653-3dc7136f3219",
              "parentUUID": "b69e7b47-6b8c-49a1-b444-552ca0bdff59",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "199fc82c-0d5c-4f9b-bc03-22af57ab409b",
            "438e5757-cb87-4091-ab25-69dae5e00228",
            "7f746213-569e-4010-9653-3dc7136f3219"
          ],
          "failures": [
            "2dd5499b-44ee-45dd-92ae-d395679f25b7"
          ],
          "pending": [],
          "skipped": [],
          "duration": 990,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "75880d5b-7c59-4468-8da3-ae8ea011987f",
          "title": "Test Scenario 6: Invalid DID",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 400",
              "fullTitle": "Test Scenario 6: Invalid DID MUST return HTTP code 400",
              "timedOut": null,
              "duration": 193,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n});",
              "err": {},
              "uuid": "ffecfd13-e571-4336-aa53-e1cd11316a91",
              "parentUUID": "75880d5b-7c59-4468-8da3-ae8ea011987f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "fullTitle": "Test Scenario 6: Invalid DID MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "timedOut": null,
              "duration": 185,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "1f5f6c7c-19e9-4f1c-8e0e-658f2cd70df6",
              "parentUUID": "75880d5b-7c59-4468-8da3-ae8ea011987f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 6: Invalid DID MUST return a JSON object",
              "timedOut": null,
              "duration": 185,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "d0de569a-e376-449f-a8a6-db69c77a078b",
              "parentUUID": "75880d5b-7c59-4468-8da3-ae8ea011987f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didResolutionMetadata.error = \"invalidDid\"",
              "fullTitle": "Test Scenario 6: Invalid DID JSON object MUST contain property didResolutionMetadata.error = \"invalidDid\"",
              "timedOut": null,
              "duration": 211,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didResolutionMetadata.error).to.contain(\"invalidDid\");\n});",
              "err": {},
              "uuid": "76dcb429-7b4d-4692-b906-7ceae54178a5",
              "parentUUID": "75880d5b-7c59-4468-8da3-ae8ea011987f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ffecfd13-e571-4336-aa53-e1cd11316a91",
            "1f5f6c7c-19e9-4f1c-8e0e-658f2cd70df6",
            "d0de569a-e376-449f-a8a6-db69c77a078b",
            "76dcb429-7b4d-4692-b906-7ceae54178a5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 774,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a0171f35-1df1-460d-9d44-27e996b3666e",
          "title": "Test Scenario 7: DID URLs with fragments",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Must return HTTP code 200",
              "fullTitle": "Test Scenario 7: DID URLs with fragments Must return HTTP code 200",
              "timedOut": null,
              "duration": 190,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "AssertionError: expected 401 to equal 200",
                "estack": "AssertionError: expected 401 to equal 200\n    at Context.eval (http://localhost:46529/__cypress/tests?p=cypress/integration/resolver_spec.js:356:36)",
                "diff": "- 401\n+ 200\n"
              },
              "uuid": "a43582fe-a6bf-4ed1-97cb-255a55accc89",
              "parentUUID": "a0171f35-1df1-460d-9d44-27e996b3666e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 7: DID URLs with fragments MUST return a JSON object",
              "timedOut": null,
              "duration": 215,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "4df6d8d6-fbe0-431c-9362-6ad3fba1f15d",
              "parentUUID": "a0171f35-1df1-460d-9d44-27e996b3666e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/did+ld+json",
              "fullTitle": "Test Scenario 7: DID URLs with fragments MUST return HTTP header Content-Type with value application/did+ld+json",
              "timedOut": null,
              "duration": 186,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "764a3682-9a10-41e7-9be6-d6f45904bf77",
              "parentUUID": "a0171f35-1df1-460d-9d44-27e996b3666e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST NOT contain property didDocument",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST NOT contain property didDocument",
              "timedOut": null,
              "duration": 217,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).not.to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "b377a924-160e-4b46-8e41-ed1ca5219d92",
              "parentUUID": "a0171f35-1df1-460d-9d44-27e996b3666e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property @context",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property @context",
              "timedOut": null,
              "duration": 207,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {
                "message": "AssertionError: expected '' to have property '@context'",
                "estack": "AssertionError: expected '' to have property '@context'\n    at Context.eval (http://localhost:46529/__cypress/tests?p=cypress/integration/resolver_spec.js:376:39)",
                "diff": null
              },
              "uuid": "5a52370e-bea1-4625-9860-124df9d3c3e7",
              "parentUUID": "a0171f35-1df1-460d-9d44-27e996b3666e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property type",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property type",
              "timedOut": null,
              "duration": 212,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"type\");\n});",
              "err": {
                "message": "AssertionError: expected '' to have property 'type'",
                "estack": "AssertionError: expected '' to have property 'type'\n    at Context.eval (http://localhost:46529/__cypress/tests?p=cypress/integration/resolver_spec.js:381:39)",
                "diff": null
              },
              "uuid": "8386d1f3-f2bf-49af-86fe-403a75aee916",
              "parentUUID": "a0171f35-1df1-460d-9d44-27e996b3666e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property id with value application/did+ld+json",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property id with value application/did+ld+json",
              "timedOut": null,
              "duration": 256,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"id\");\n  expect(response.body[\"id\"]).to.contain(\"did:sov:WRfXPg8dantKVubE3HX8pw#key-1\");\n});",
              "err": {
                "message": "AssertionError: expected '' to have property 'id'",
                "estack": "AssertionError: expected '' to have property 'id'\n    at Context.eval (http://localhost:46529/__cypress/tests?p=cypress/integration/resolver_spec.js:386:39)",
                "diff": null
              },
              "uuid": "a59b8d4a-ff88-4b32-9e19-465153f2ae28",
              "parentUUID": "a0171f35-1df1-460d-9d44-27e996b3666e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4df6d8d6-fbe0-431c-9362-6ad3fba1f15d",
            "764a3682-9a10-41e7-9be6-d6f45904bf77",
            "b377a924-160e-4b46-8e41-ed1ca5219d92"
          ],
          "failures": [
            "a43582fe-a6bf-4ed1-97cb-255a55accc89",
            "5a52370e-bea1-4625-9860-124df9d3c3e7",
            "8386d1f3-f2bf-49af-86fe-403a75aee916",
            "a59b8d4a-ff88-4b32-9e19-465153f2ae28"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1483,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5095aab5-bd6a-4ca1-b75b-03086fb23a55",
          "title": "Test Scenario 8: Service and relativeRef parameters",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fetches DID",
              "fullTitle": "Test Scenario 8: Service and relativeRef parameters Fetches DID",
              "timedOut": null,
              "duration": 211,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:web:danubetech.com?service=github&relativeRef=did-method-dns\",\n  headers: {\n    Accept: \"text/uri-list\"\n  },\n  failOnStatusCode: false\n}).as(\"response\");\nit(\"MUST return HTTP response status equals 303\", () => {\n  cy.get(\"@response\").then(response => {\n    expect(response.status).to.eq(303);\n  });\n});\nit(\"MUST return a JSON object\", () => {\n  cy.get(\"@request\").then(response => {\n    expect(response).to.be.a(\"object\");\n  });\n});",
              "err": {},
              "uuid": "c9e71d61-5525-4e94-a4b7-98eaadb5fd7c",
              "parentUUID": "5095aab5-bd6a-4ca1-b75b-03086fb23a55",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c9e71d61-5525-4e94-a4b7-98eaadb5fd7c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 211,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b5f7606c-0e57-48d5-b638-32383e23b08d",
          "title": "Test Scenario 9: DID URLs with transformKeys",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 207,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\",\n    Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "AssertionError: expected 401 to equal 200",
                "estack": "AssertionError: expected 401 to equal 200\n    at Context.eval (http://localhost:46529/__cypress/tests?p=cypress/integration/resolver_spec.js:431:36)",
                "diff": "- 401\n+ 200\n"
              },
              "uuid": "c4e7ecd4-1339-41d8-a913-6029211967a9",
              "parentUUID": "b5f7606c-0e57-48d5-b638-32383e23b08d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return a JSON object",
              "timedOut": null,
              "duration": 229,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\",\n    Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "f71f120c-3c1e-4ae0-b6e9-11518d692092",
              "parentUUID": "b5f7606c-0e57-48d5-b638-32383e23b08d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return property verificationMethod of type JsonWebKey2020",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return property verificationMethod of type JsonWebKey2020",
              "timedOut": null,
              "duration": 197,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\",\n    Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  response.body.verificationMethod.forEach(out => {\n    expect(out).has.property(\"type\", \"JsonWebKey2020\");\n  });\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'forEach')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'forEach')\n    at Context.eval (http://localhost:46529/__cypress/tests?p=cypress/integration/resolver_spec.js:457:42)",
                "diff": null
              },
              "uuid": "9f3e6776-236d-4b95-b0b1-bcfc0e7ce7e4",
              "parentUUID": "b5f7606c-0e57-48d5-b638-32383e23b08d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 292,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\",\n    Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "a6ad26d1-6fd3-4875-8b45-6c2199cb8eb8",
              "parentUUID": "b5f7606c-0e57-48d5-b638-32383e23b08d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return property id with value did:sov:WRfXPg8dantKVubE3HX8pw",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return property id with value did:sov:WRfXPg8dantKVubE3HX8pw",
              "timedOut": null,
              "duration": 332,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\",\n    Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:WRfXPg8dantKVubE3HX8pw\");\n});",
              "err": {
                "message": "AssertionError: expected '' to have property 'id'",
                "estack": "AssertionError: expected '' to have property 'id'\n    at Context.eval (http://localhost:46529/__cypress/tests?p=cypress/integration/resolver_spec.js:485:35)",
                "diff": null
              },
              "uuid": "db57d124-82cd-4378-8b69-6de4300f76b1",
              "parentUUID": "b5f7606c-0e57-48d5-b638-32383e23b08d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f71f120c-3c1e-4ae0-b6e9-11518d692092",
            "a6ad26d1-6fd3-4875-8b45-6c2199cb8eb8"
          ],
          "failures": [
            "c4e7ecd4-1339-41d8-a913-6029211967a9",
            "9f3e6776-236d-4b95-b0b1-bcfc0e7ce7e4",
            "db57d124-82cd-4378-8b69-6de4300f76b1"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1257,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f7bafba3-8560-41e2-84e6-62005a8d163a",
          "title": "Test Scenario 12: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 187,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "AssertionError: expected 401 to equal 200",
                "estack": "AssertionError: expected 401 to equal 200\n    at Context.eval (http://localhost:46529/__cypress/tests?p=cypress/integration/resolver_spec.js:502:36)",
                "diff": "- 401\n+ 200\n"
              },
              "uuid": "4bfa037a-108b-4232-8f33-d2df198f1631",
              "parentUUID": "f7bafba3-8560-41e2-84e6-62005a8d163a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 221,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains(\"application/did+json;charset=utf-8\");\n});",
              "err": {},
              "uuid": "28e9f2b1-66fd-4968-9536-97f9c6548d8b",
              "parentUUID": "f7bafba3-8560-41e2-84e6-62005a8d163a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property id",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST contain property id",
              "timedOut": null,
              "duration": 218,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\");\n});",
              "err": {
                "message": "AssertionError: expected '' to have property 'id'",
                "estack": "AssertionError: expected '' to have property 'id'\n    at Context.eval (http://localhost:46529/__cypress/tests?p=cypress/integration/resolver_spec.js:526:35)",
                "diff": null
              },
              "uuid": "ea281e46-d63d-43c5-b0fa-8addfe5cfb34",
              "parentUUID": "f7bafba3-8560-41e2-84e6-62005a8d163a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property keyAgreement",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST contain property keyAgreement",
              "timedOut": null,
              "duration": 224,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body[\"keyAgreement\"][0]).to.contain(\"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\");\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading '0')",
                "estack": "TypeError: Cannot read properties of undefined (reading '0')\n    at Context.eval (http://localhost:46529/__cypress/tests?p=cypress/integration/resolver_spec.js:538:45)",
                "diff": null
              },
              "uuid": "986ab13b-e2d1-47bb-91c1-79adc16c2f71",
              "parentUUID": "f7bafba3-8560-41e2-84e6-62005a8d163a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "28e9f2b1-66fd-4968-9536-97f9c6548d8b"
          ],
          "failures": [
            "4bfa037a-108b-4232-8f33-d2df198f1631",
            "ea281e46-d63d-43c5-b0fa-8addfe5cfb34",
            "986ab13b-e2d1-47bb-91c1-79adc16c2f71"
          ],
          "pending": [],
          "skipped": [],
          "duration": 850,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d67b717a-964d-4997-8255-8f5ca107f568",
          "title": "Test Scenario 12B: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 232,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: 'application/ld+json;profile=\"https://w3id.org/did-resolution\"',\n    Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "AssertionError: expected 401 to equal 200",
                "estack": "AssertionError: expected 401 to equal 200\n    at Context.eval (http://localhost:46529/__cypress/tests?p=cypress/integration/resolver_spec.js:556:36)",
                "diff": "- 401\n+ 200\n"
              },
              "uuid": "3ba071c9-6611-45c6-ba3b-77ad80b31a4e",
              "parentUUID": "d67b717a-964d-4997-8255-8f5ca107f568",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "HTTP response must contain content-type property with value application/did+json;charset=utf-8",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL HTTP response must contain content-type property with value application/did+json;charset=utf-8",
              "timedOut": null,
              "duration": 232,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: 'application/ld+json;profile=\"https://w3id.org/did-resolution\"',\n    Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "8fe93abf-0aa4-4110-9ab7-6f6d4980f60e",
              "parentUUID": "d67b717a-964d-4997-8255-8f5ca107f568",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8fe93abf-0aa4-4110-9ab7-6f6d4980f60e"
          ],
          "failures": [
            "3ba071c9-6611-45c6-ba3b-77ad80b31a4e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 464,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.2"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mocha",
        "configFile": "reporterOpts.json",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.1.1"
    }
  }
}