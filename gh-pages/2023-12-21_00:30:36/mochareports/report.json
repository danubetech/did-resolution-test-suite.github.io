{
  "stats": {
    "suites": 1,
    "tests": 22,
    "passes": 0,
    "pending": 0,
    "failures": 22,
    "start": "2023-12-21T00:28:40.066Z",
    "end": "2023-12-21T00:30:31.886Z",
    "duration": 111582,
    "testsRegistered": 22,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d1a3bb5b-af50-4518-a9ee-3057d063b124",
      "title": "",
      "fullFile": "cypress/integration/uniresolver_spec.js",
      "file": "cypress/integration/uniresolver_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f9eb0b3d-438a-4054-a8d5-2acd66109fad",
          "title": "Test Scenario 1: DID Resolution Result fixtures: https://dev.uniresolver.io/1.0/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved",
              "fullTitle": "Test Scenario 1: DID Resolution Result fixtures: https://dev.uniresolver.io/1.0/identifiers/ A correct DID can be resolved",
              "timedOut": null,
              "duration": 5041,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.clearCookies();\ncy.fixture(path_example_dids).its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.headers[\"content-type\"].replace(/\\s+/g, \"\")).contains('application/ld+json;profile=\"https://w3id.org/did-resolution');\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response).to.be.a(\"object\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocument\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didResolutionMetadata\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocumentMetadata\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body.didDocument.id).to.be.a(\"string\").and.satisfy(msg => msg.startsWith(\"did:\"));\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44689/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:44689/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:44689/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:44689/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:44689/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:44689/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:110:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:108:27)",
                "diff": null
              },
              "uuid": "623a299b-a2e2-4fdc-a6eb-a37e06ef1ae3",
              "parentUUID": "f9eb0b3d-438a-4054-a8d5-2acd66109fad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "623a299b-a2e2-4fdc-a6eb-a37e06ef1ae3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5041,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "946dad5c-7444-41c0-872f-b1ef34ff1249",
          "title": "Test Scenario 2: JSON-LD DID document",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved with header input",
              "fullTitle": "Test Scenario 2: JSON-LD DID document A correct DID can be resolved with header input",
              "timedOut": null,
              "duration": 5053,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"application/did+ld+json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n      cy.get(\"@request\").then(response => {\n        expect(response).to.be.a(\"object\");\n      });\n      expect(response.body).not.to.have.property(\"didDocument\");\n      expect(response.body[\"id\"]).to.contain(normalDid);\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44689/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:44689/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:44689/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:44689/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:44689/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:44689/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:148:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:146:27)",
                "diff": null
              },
              "uuid": "26913874-8bec-4c7b-bcea-dd5500b4254d",
              "parentUUID": "946dad5c-7444-41c0-872f-b1ef34ff1249",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "26913874-8bec-4c7b-bcea-dd5500b4254d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5053,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d3731f45-1425-424d-bcd6-f7ab616f4288",
          "title": "Test Scenario 3: Representation not supported",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Shows an error when a representation is prompted",
              "fullTitle": "Test Scenario 3: Representation not supported Shows an error when a representation is prompted",
              "timedOut": null,
              "duration": 5055,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"image/png\"\n      },\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(406);\n      console.log(response);\n      expect(response.body.dereferencingMetadata.error).to.eq('\"representationNotSupported\"');\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44689/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:44689/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:44689/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:44689/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:44689/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:44689/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:203:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:201:27)",
                "diff": null
              },
              "uuid": "28336074-c222-429c-988a-f2df95f00377",
              "parentUUID": "d3731f45-1425-424d-bcd6-f7ab616f4288",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "28336074-c222-429c-988a-f2df95f00377"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5055,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "262d98e9-426b-4c56-bc19-2e9a23fd3011",
          "title": "Test Scenario 4: Deactivated",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns an HTTP code of 410 for deactivated DIDs",
              "fullTitle": "Test Scenario 4: Deactivated Returns an HTTP code of 410 for deactivated DIDs",
              "timedOut": null,
              "duration": 5062,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"deacDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const deacDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + deacDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(410);\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.body.didDocumentMetadata.deactivated).to.eq(true);\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:indicio:test:16vv8izCToK4svjYjvsp4r\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:indicio:test:16vv8izCToK4svjYjvsp4r\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44689/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:44689/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:44689/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:44689/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:44689/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:44689/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:227:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:225:27)",
                "diff": null
              },
              "uuid": "cd9eb5ca-9feb-479c-adff-309b334067cb",
              "parentUUID": "262d98e9-426b-4c56-bc19-2e9a23fd3011",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "cd9eb5ca-9feb-479c-adff-309b334067cb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5062,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "16ebf9fe-c2c9-420d-9499-32d5c76c4810",
          "title": "Test Scenario 5: Not found",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns an HTTP code of 404 for non-existent DIDs",
              "fullTitle": "Test Scenario 5: Not found Returns an HTTP code of 404 for non-existent DIDs",
              "timedOut": null,
              "duration": 5051,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"nonExisDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const nonExDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + nonExDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(404);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response).to.be.a(\"object\");\n      expect(response.body.didResolutionMetadata.error).to.eq(\"notFound\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:0000000000000000000000\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:0000000000000000000000\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44689/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:44689/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:44689/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:44689/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:44689/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:44689/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:249:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:247:27)",
                "diff": null
              },
              "uuid": "e4a9795c-eb41-40d2-a0f5-76a6ce39d0e9",
              "parentUUID": "16ebf9fe-c2c9-420d-9499-32d5c76c4810",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e4a9795c-eb41-40d2-a0f5-76a6ce39d0e9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5051,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5dce0eab-48d4-42b8-bd7d-a7ebb5d77b57",
          "title": "Test Scenario 6A: Invalid DID",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns a HTTP code of 400 for an invalid DID",
              "fullTitle": "Test Scenario 6A: Invalid DID Returns a HTTP code of 400 for an invalid DID",
              "timedOut": null,
              "duration": 5050,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(400);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response).to.be.a(\"object\");\n      expect(response.body.didResolutionMetadata.error).contains(\"invalidDid\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:example_222\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:example_222\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44689/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:44689/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:44689/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:44689/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:44689/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:44689/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:271:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:269:27)",
                "diff": null
              },
              "uuid": "63dfb53c-4dcf-43d2-a2e5-799a9b0d2fe2",
              "parentUUID": "5dce0eab-48d4-42b8-bd7d-a7ebb5d77b57",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "63dfb53c-4dcf-43d2-a2e5-799a9b0d2fe2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5050,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0ff1c778-8733-420f-898a-448dac24eecf",
          "title": "Test Scenario 6B: method not supported DIDs",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises an error for unsupported DID methods",
              "fullTitle": "Test Scenario 6B: method not supported DIDs Raises an error for unsupported DID methods",
              "timedOut": null,
              "duration": 5064,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"methodNotSupportedDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.body.didResolutionMetadata.error).contains(\"methodNotSupported\");\n      expect(response).to.be.a(\"object\"); // todo: should this be 404 or 400?\n      expect(response.status).to.eq(400); // returns 501\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:xyz:12345\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:xyz:12345\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44689/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:44689/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:44689/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:44689/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:44689/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:44689/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:293:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:291:27)",
                "diff": null
              },
              "uuid": "5646b235-7c66-47d1-b62b-49ed24f20317",
              "parentUUID": "0ff1c778-8733-420f-898a-448dac24eecf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5646b235-7c66-47d1-b62b-49ed24f20317"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5064,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d38c468e-ac4d-4499-994e-8133f1a08f74",
          "title": "Test Scenario 6C: invalid verificationMethod.id",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises error when verificationMethod.id is invalid",
              "fullTitle": "Test Scenario 6C: invalid verificationMethod.id Raises error when verificationMethod.id is invalid",
              "timedOut": null,
              "duration": 5071,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidVerificationMethodId\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"'); // todo: should this be 404 or 400?\n      expect(response.status).to.eq(400); // return 200\n      expect(response.body.didResolutionMetadata.error).contains(\"invalidDidUrl\"); // doesn't exist\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:did-web.godiddy.com:ad58e1ad-09e9-4873-83c7-42e11809b54b\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:did-web.godiddy.com:ad58e1ad-09e9-4873-83c7-42e11809b54b\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44689/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:44689/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:44689/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:44689/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:44689/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:44689/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:318:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:316:27)",
                "diff": null
              },
              "uuid": "ba7146a1-af85-4158-a1d8-14cf8667ea68",
              "parentUUID": "d38c468e-ac4d-4499-994e-8133f1a08f74",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ba7146a1-af85-4158-a1d8-14cf8667ea68"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5071,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7cbe0d89-83a9-4c5c-82f0-d83d1a6fee8a",
          "title": "Test Scenario 6D: invalid verificationMethod.controller",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises error when verificationMethod.controller is invalid",
              "fullTitle": "Test Scenario 6D: invalid verificationMethod.controller Raises error when verificationMethod.controller is invalid",
              "timedOut": null,
              "duration": 5071,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidVerificationMethodController\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"'); // todo: should this be 404 or 400?\n      expect(response.status).to.eq(400); // returns 200\n      expect(response.body.didResolutionMetadata.error).contains(\"invalidDid\"); // doesn't exist\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:did-web.godiddy.com:ad58e1ad-09e9-4873-83c7-42e11809b54b\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:did-web.godiddy.com:ad58e1ad-09e9-4873-83c7-42e11809b54b\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44689/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:44689/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:44689/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:44689/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:44689/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:44689/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:342:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:340:27)",
                "diff": null
              },
              "uuid": "fc0823dc-8da4-4bce-949e-0284f086507a",
              "parentUUID": "7cbe0d89-83a9-4c5c-82f0-d83d1a6fee8a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "fc0823dc-8da4-4bce-949e-0284f086507a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5071,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c245a56e-d4e2-4637-b6ad-0d70b152cc08",
          "title": "Test Scenario 6E: invalid didDocument.id",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises error when didDocument.id is invalid",
              "fullTitle": "Test Scenario 6E: invalid didDocument.id Raises error when didDocument.id is invalid",
              "timedOut": null,
              "duration": 5070,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidDidDocumentId\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"invalidDid\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/to_be_defined\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/to_be_defined\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44689/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:44689/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:44689/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:44689/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:44689/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:44689/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:366:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:364:27)",
                "diff": null
              },
              "uuid": "77f57915-dc13-4dca-984a-f470e8ce97e5",
              "parentUUID": "c245a56e-d4e2-4637-b6ad-0d70b152cc08",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "77f57915-dc13-4dca-984a-f470e8ce97e5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5070,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7733d379-9c34-40c2-9ece-c8b319fd73a9",
          "title": "Test Scenario 6F: Invalid didDocument scheme",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises invalidDid error when if scheme is not did",
              "fullTitle": "Test Scenario 6F: Invalid didDocument scheme Raises invalidDid error when if scheme is not did",
              "timedOut": null,
              "duration": 5073,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidDidScheme\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"invalidDid\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/urn:uuid:c0bbe99d-2071-4fd3-a87e-6b710b369108\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/urn:uuid:c0bbe99d-2071-4fd3-a87e-6b710b369108\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44689/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:44689/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:44689/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:44689/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:44689/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:44689/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:388:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:386:27)",
                "diff": null
              },
              "uuid": "c5061998-b542-496c-96c3-b555fe86830a",
              "parentUUID": "7733d379-9c34-40c2-9ece-c8b319fd73a9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c5061998-b542-496c-96c3-b555fe86830a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5073,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "53748a56-279e-46eb-af62-59cb93071659",
          "title": "Test Scenario 6G: notAllowedLocalDerivedKey error/warning",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises notAllowedLocalDerivedKey error when did is incorrect",
              "fullTitle": "Test Scenario 6G: notAllowedLocalDerivedKey error/warning Raises notAllowedLocalDerivedKey error when did is incorrect",
              "timedOut": null,
              "duration": 5082,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"notAllowedLocalDerivedKey\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"notAllowedLocalDerivedKey\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:danubetech.com:did:test1\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:danubetech.com:did:test1\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44689/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:44689/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:44689/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:44689/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:44689/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:44689/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:410:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:408:27)",
                "diff": null
              },
              "uuid": "b8ab2141-b165-4bae-be2c-69a2364a6b8c",
              "parentUUID": "53748a56-279e-46eb-af62-59cb93071659",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b8ab2141-b165-4bae-be2c-69a2364a6b8c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5082,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cdf4ab79-a915-4f63-b4ce-34800efa259d",
          "title": "Test Scenario 6H: notAllowedLocalDuplicateKey error/warning",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises notAllowedLocalDuplicateKey error when did is incorrect",
              "fullTitle": "Test Scenario 6H: notAllowedLocalDuplicateKey error/warning Raises notAllowedLocalDuplicateKey error when did is incorrect",
              "timedOut": null,
              "duration": 5078,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidDidDocumentId\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"notAllowedLocalDuplicateKey\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/to_be_defined\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/to_be_defined\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44689/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:44689/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:44689/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:44689/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:44689/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:44689/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:432:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:430:27)",
                "diff": null
              },
              "uuid": "c6af089a-be4f-429f-afa0-d392785242ce",
              "parentUUID": "cdf4ab79-a915-4f63-b4ce-34800efa259d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c6af089a-be4f-429f-afa0-d392785242ce"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5078,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b168e48b-6551-4b63-b94e-b6b3660e9689",
          "title": "Test Scenario 6I: notAllowedKeyType error/warning",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises notAllowedKeyType error when did is incorrect",
              "fullTitle": "Test Scenario 6I: notAllowedKeyType error/warning Raises notAllowedKeyType error when did is incorrect",
              "timedOut": null,
              "duration": 5076,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"invalidDidDocumentId\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"notAllowedKeyType\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/to_be_defined\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/to_be_defined\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44689/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:44689/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:44689/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:44689/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:44689/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:44689/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:454:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:452:27)",
                "diff": null
              },
              "uuid": "65699505-92a0-4c6a-90ac-c1b9b87baac4",
              "parentUUID": "b168e48b-6551-4b63-b94e-b6b3660e9689",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "65699505-92a0-4c6a-90ac-c1b9b87baac4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5076,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cbb7cc13-5b45-483c-bbfb-1e26358cf901",
          "title": "Test Scenario 6J: notAllowedMethod error/warning",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Raises notAllowedMethod error when did is incorrect",
              "fullTitle": "Test Scenario 6J: notAllowedMethod error/warning Raises notAllowedMethod error when did is incorrect",
              "timedOut": null,
              "duration": 5083,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"notAllowedMethod\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.status).to.eq(400);\n      expect(response.body.didResolutionMetadata.error).contains(\"notAllowedMethod\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:github:gjgd\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:github:gjgd\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44689/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:44689/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:44689/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:44689/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:44689/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:44689/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:477:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:475:27)",
                "diff": null
              },
              "uuid": "579eb060-f576-46d8-a820-a33577adf7e6",
              "parentUUID": "cbb7cc13-5b45-483c-bbfb-1e26358cf901",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "579eb060-f576-46d8-a820-a33577adf7e6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5083,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "10ef2a28-14f6-4474-afc9-c04a9bec2386",
          "title": "Test Scenario 7: DID URLs with fragments",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Can resolve a DID with a fragment",
              "fullTitle": "Test Scenario 7: DID URLs with fragments Can resolve a DID with a fragment",
              "timedOut": null,
              "duration": 5082,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"fragmentDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const fragmentDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + fragmentDid,\n      failOnStatusCode: false,\n      headers: {\n        Accept: \"application/did+ld+json\",\n        Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n      }\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n      expect(response.body).not.to.have.property(\"didDocument\");\n      expect(response.body).to.have.property(\"id\");\n      expect(response.body[\"id\"]).to.contain(decodeURIComponent(fragmentDid.split(\"#\")[0]));\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did%3Asov%3AWRfXPg8dantKVubE3HX8pw%23key-1\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did%3Asov%3AWRfXPg8dantKVubE3HX8pw%23key-1\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44689/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:44689/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:44689/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:44689/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:44689/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:44689/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:499:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:497:27)",
                "diff": null
              },
              "uuid": "32eb24aa-a585-43d0-855b-8a1e040c74f3",
              "parentUUID": "10ef2a28-14f6-4474-afc9-c04a9bec2386",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "32eb24aa-a585-43d0-855b-8a1e040c74f3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5082,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8abd34f3-98e4-478a-803d-557ed4771ec0",
          "title": "Test Scenario 8: Service and relativeRef parameters",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fetches DID",
              "fullTitle": "Test Scenario 8: Service and relativeRef parameters Fetches DID",
              "timedOut": null,
              "duration": 5083,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"relativeParamDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const fragmentDid = list[key];\n    console.log(\"FRAGMENT DID IS\", fragmentDid);\n    cy.request({\n      method: \"GET\",\n      url: endpoint + fragmentDid,\n      headers: {\n        Accept: \"text/uri-list\"\n      },\n      failOnStatusCode: false\n    }).as(\"response\");\n    it(\"MUST return HTTP response status equals 303\", () => {\n      cy.get(\"@response\").then(response => {\n        expect(response.status).to.eq(303);\n      });\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:danubetech.com?service=github&relativeRef=did-method-dns\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:web:danubetech.com?service=github&relativeRef=did-method-dns\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44689/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:44689/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:44689/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:44689/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:44689/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:44689/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:529:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:526:27)",
                "diff": null
              },
              "uuid": "cc44d9e4-b0b7-42bd-a6d4-b7825408a189",
              "parentUUID": "8abd34f3-98e4-478a-803d-557ed4771ec0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "cc44d9e4-b0b7-42bd-a6d4-b7825408a189"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5083,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e09cdccd-5b89-4ce2-9447-9818ba512362",
          "title": "Test Scenario 9: DID URLs with transformKeys",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5067,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"transformKeyDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const transformKeyDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + transformKeyDid,\n      headers: {\n        Accept: \"application/did+ld+json\",\n        Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response).to.be.a(\"object\");\n      response.body.verificationMethod.forEach(out => {\n        expect(out).has.property(\"type\").to.be.oneOf([\"JsonWebKey2020\", \"Ed25519VerificationKey2018\", \"X25519KeyAgreementKey2019\"]);\n      });\n      expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n      expect(response.body).has.property(\"id\", decodeURIComponent(transformKeyDid.split(\"?\")[0].split(\"#\")[0]));\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44689/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:44689/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:44689/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:44689/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:44689/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:44689/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:554:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:552:27)",
                "diff": null
              },
              "uuid": "9c85a477-b075-4301-a164-4c1203b14863",
              "parentUUID": "e09cdccd-5b89-4ce2-9447-9818ba512362",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9c85a477-b075-4301-a164-4c1203b14863"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5067,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1d6eac9d-63ab-4595-aec6-c6806982f09e",
          "title": "Test Scenario 10: DID URLs with versionTime parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5088,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"versionTimeDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const versionTimeDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + versionTimeDid,\n      headers: {\n        Accept: \"application/did+ld+json\",\n        Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n      expect(response).to.be.a(\"object\");\n      expect(response.body).has.property(\"id\").contains(\"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44689/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:44689/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:44689/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:44689/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:44689/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:44689/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:584:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:582:27)",
                "diff": null
              },
              "uuid": "5e23bd10-0868-4495-95b2-28ab8898f7aa",
              "parentUUID": "1d6eac9d-63ab-4595-aec6-c6806982f09e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5e23bd10-0868-4495-95b2-28ab8898f7aa"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5088,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5117d3da-eca5-4e80-b7a5-1f893d866310",
          "title": "Test Scenario 11: DID URLs with versionId parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5091,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"versionIdDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const versionIdDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + versionIdDid,\n      headers: {\n        Accept: \"application/did+ld+json\",\n        Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response).to.be.a(\"object\");\n      expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n      expect(response.body).has.property(\"id\").contains(decodeURIComponent(versionIdDid.split(\"?\")[0]));\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44689/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:44689/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:44689/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:44689/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:44689/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:44689/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:611:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:609:27)",
                "diff": null
              },
              "uuid": "17255fdd-9b89-4b9d-9dda-74ff5c38851f",
              "parentUUID": "5117d3da-eca5-4e80-b7a5-1f893d866310",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "17255fdd-9b89-4b9d-9dda-74ff5c38851f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5091,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0d4676ce-0df0-40bd-a47b-3e3e81c9d27d",
          "title": "Test Scenario 12: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5096,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"application/json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      console.log(\"normal did is:\", normalDid);\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains(\"application/did+json;charset=utf-8\");\n      expect(response.body).has.property(\"id\", normalDid); // expect(response.body[\"keyAgreement\"][0]).to.contain(normalDid);\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44689/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:44689/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:44689/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:44689/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:44689/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:44689/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:638:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:636:27)",
                "diff": null
              },
              "uuid": "e7b1e7be-12bf-42bb-8795-d2b2492ad49a",
              "parentUUID": "0d4676ce-0df0-40bd-a47b-3e3e81c9d27d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e7b1e7be-12bf-42bb-8795-d2b2492ad49a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5096,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ddf98d03-90e8-4d5d-a251-79a464740570",
          "title": "Test Scenario 12B: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5095,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(path_example_dids).its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: 'application/ld+json;profile=\"https://w3c-ccg.github.io/did-resolution/\"'\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      console.log(\"normal did is:\", normalDid);\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains('application/ld+json; profile=\"https://w3c-ccg.github.io/did-resolution/\"');\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:44689/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:44689/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44689/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:44689/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:44689/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:44689/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:44689/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:44689/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:44689/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:665:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:44689/__cypress/tests?p=cypress/integration/uniresolver_spec.js:663:27)",
                "diff": null
              },
              "uuid": "c5442132-1ad8-4041-9adf-2011514a3fd5",
              "parentUUID": "ddf98d03-90e8-4d5d-a251-79a464740570",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c5442132-1ad8-4041-9adf-2011514a3fd5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5095,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.2"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mocha",
        "configFile": "reporterOpts.json",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.1.1"
    }
  }
}